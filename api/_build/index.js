var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[Object.keys(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// node_modules/@remix-run/dev/compiler/shims/react.ts
var React;
var init_react = __esm({
  "node_modules/@remix-run/dev/compiler/shims/react.ts"() {
    React = __toModule(require("react"));
  }
});

// node_modules/remix/client.js
var require_client = __commonJS({
  "node_modules/remix/client.js"(exports) {
    init_react();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var react = require("@remix-run/react");
    Object.defineProperty(exports, "Form", {
      enumerable: true,
      get: function() {
        return react.Form;
      }
    });
    Object.defineProperty(exports, "Link", {
      enumerable: true,
      get: function() {
        return react.Link;
      }
    });
    Object.defineProperty(exports, "Links", {
      enumerable: true,
      get: function() {
        return react.Links;
      }
    });
    Object.defineProperty(exports, "LiveReload", {
      enumerable: true,
      get: function() {
        return react.LiveReload;
      }
    });
    Object.defineProperty(exports, "Meta", {
      enumerable: true,
      get: function() {
        return react.Meta;
      }
    });
    Object.defineProperty(exports, "NavLink", {
      enumerable: true,
      get: function() {
        return react.NavLink;
      }
    });
    Object.defineProperty(exports, "Outlet", {
      enumerable: true,
      get: function() {
        return react.Outlet;
      }
    });
    Object.defineProperty(exports, "PrefetchPageLinks", {
      enumerable: true,
      get: function() {
        return react.PrefetchPageLinks;
      }
    });
    Object.defineProperty(exports, "RemixBrowser", {
      enumerable: true,
      get: function() {
        return react.RemixBrowser;
      }
    });
    Object.defineProperty(exports, "RemixServer", {
      enumerable: true,
      get: function() {
        return react.RemixServer;
      }
    });
    Object.defineProperty(exports, "Scripts", {
      enumerable: true,
      get: function() {
        return react.Scripts;
      }
    });
    Object.defineProperty(exports, "ScrollRestoration", {
      enumerable: true,
      get: function() {
        return react.ScrollRestoration;
      }
    });
    Object.defineProperty(exports, "useActionData", {
      enumerable: true,
      get: function() {
        return react.useActionData;
      }
    });
    Object.defineProperty(exports, "useBeforeUnload", {
      enumerable: true,
      get: function() {
        return react.useBeforeUnload;
      }
    });
    Object.defineProperty(exports, "useCatch", {
      enumerable: true,
      get: function() {
        return react.useCatch;
      }
    });
    Object.defineProperty(exports, "useFetcher", {
      enumerable: true,
      get: function() {
        return react.useFetcher;
      }
    });
    Object.defineProperty(exports, "useFetchers", {
      enumerable: true,
      get: function() {
        return react.useFetchers;
      }
    });
    Object.defineProperty(exports, "useFormAction", {
      enumerable: true,
      get: function() {
        return react.useFormAction;
      }
    });
    Object.defineProperty(exports, "useHref", {
      enumerable: true,
      get: function() {
        return react.useHref;
      }
    });
    Object.defineProperty(exports, "useLoaderData", {
      enumerable: true,
      get: function() {
        return react.useLoaderData;
      }
    });
    Object.defineProperty(exports, "useLocation", {
      enumerable: true,
      get: function() {
        return react.useLocation;
      }
    });
    Object.defineProperty(exports, "useMatches", {
      enumerable: true,
      get: function() {
        return react.useMatches;
      }
    });
    Object.defineProperty(exports, "useNavigate", {
      enumerable: true,
      get: function() {
        return react.useNavigate;
      }
    });
    Object.defineProperty(exports, "useNavigationType", {
      enumerable: true,
      get: function() {
        return react.useNavigationType;
      }
    });
    Object.defineProperty(exports, "useOutlet", {
      enumerable: true,
      get: function() {
        return react.useOutlet;
      }
    });
    Object.defineProperty(exports, "useOutletContext", {
      enumerable: true,
      get: function() {
        return react.useOutletContext;
      }
    });
    Object.defineProperty(exports, "useParams", {
      enumerable: true,
      get: function() {
        return react.useParams;
      }
    });
    Object.defineProperty(exports, "useResolvedPath", {
      enumerable: true,
      get: function() {
        return react.useResolvedPath;
      }
    });
    Object.defineProperty(exports, "useSearchParams", {
      enumerable: true,
      get: function() {
        return react.useSearchParams;
      }
    });
    Object.defineProperty(exports, "useSubmit", {
      enumerable: true,
      get: function() {
        return react.useSubmit;
      }
    });
    Object.defineProperty(exports, "useTransition", {
      enumerable: true,
      get: function() {
        return react.useTransition;
      }
    });
  }
});

// node_modules/remix/server.js
var require_server = __commonJS({
  "node_modules/remix/server.js"(exports) {
    init_react();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var serverRuntime = require("@remix-run/server-runtime");
    Object.defineProperty(exports, "createCookie", {
      enumerable: true,
      get: function() {
        return serverRuntime.createCookie;
      }
    });
    Object.defineProperty(exports, "createCookieSessionStorage", {
      enumerable: true,
      get: function() {
        return serverRuntime.createCookieSessionStorage;
      }
    });
    Object.defineProperty(exports, "createMemorySessionStorage", {
      enumerable: true,
      get: function() {
        return serverRuntime.createMemorySessionStorage;
      }
    });
    Object.defineProperty(exports, "createSession", {
      enumerable: true,
      get: function() {
        return serverRuntime.createSession;
      }
    });
    Object.defineProperty(exports, "createSessionStorage", {
      enumerable: true,
      get: function() {
        return serverRuntime.createSessionStorage;
      }
    });
    Object.defineProperty(exports, "isCookie", {
      enumerable: true,
      get: function() {
        return serverRuntime.isCookie;
      }
    });
    Object.defineProperty(exports, "isSession", {
      enumerable: true,
      get: function() {
        return serverRuntime.isSession;
      }
    });
    Object.defineProperty(exports, "json", {
      enumerable: true,
      get: function() {
        return serverRuntime.json;
      }
    });
    Object.defineProperty(exports, "redirect", {
      enumerable: true,
      get: function() {
        return serverRuntime.redirect;
      }
    });
  }
});

// node_modules/remix/platform.js
var require_platform = __commonJS({
  "node_modules/remix/platform.js"(exports) {
    init_react();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var node = require("@remix-run/node");
    Object.defineProperty(exports, "createFileSessionStorage", {
      enumerable: true,
      get: function() {
        return node.createFileSessionStorage;
      }
    });
    Object.defineProperty(exports, "unstable_createFileUploadHandler", {
      enumerable: true,
      get: function() {
        return node.unstable_createFileUploadHandler;
      }
    });
    Object.defineProperty(exports, "unstable_createMemoryUploadHandler", {
      enumerable: true,
      get: function() {
        return node.unstable_createMemoryUploadHandler;
      }
    });
    Object.defineProperty(exports, "unstable_parseMultipartFormData", {
      enumerable: true,
      get: function() {
        return node.unstable_parseMultipartFormData;
      }
    });
  }
});

// node_modules/remix/index.js
var require_remix = __commonJS({
  "node_modules/remix/index.js"(exports) {
    init_react();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var client = require_client();
    var server = require_server();
    var platform = require_platform();
    Object.keys(client).forEach(function(k) {
      if (k !== "default" && !exports.hasOwnProperty(k))
        Object.defineProperty(exports, k, {
          enumerable: true,
          get: function() {
            return client[k];
          }
        });
    });
    Object.keys(server).forEach(function(k) {
      if (k !== "default" && !exports.hasOwnProperty(k))
        Object.defineProperty(exports, k, {
          enumerable: true,
          get: function() {
            return server[k];
          }
        });
    });
    Object.keys(platform).forEach(function(k) {
      if (k !== "default" && !exports.hasOwnProperty(k))
        Object.defineProperty(exports, k, {
          enumerable: true,
          get: function() {
            return platform[k];
          }
        });
    });
  }
});

// <stdin>
__export(exports, {
  assets: () => import_assets.default,
  entry: () => entry,
  routes: () => routes
});
init_react();

// app/entry.server.tsx
var entry_server_exports = {};
__export(entry_server_exports, {
  default: () => handleRequest
});
init_react();
var import_server = __toModule(require("react-dom/server"));
var import_remix = __toModule(require_remix());
function handleRequest(request, responseStatusCode, responseHeaders, remixContext) {
  const markup = (0, import_server.renderToString)(/* @__PURE__ */ React.createElement(import_remix.RemixServer, {
    context: remixContext,
    url: request.url
  }));
  responseHeaders.set("Content-Type", "text/html");
  return new Response("<!DOCTYPE html>" + markup, {
    status: responseStatusCode,
    headers: responseHeaders
  });
}

// route-module:/Users/chidiebube/Projects/wordle/app/root.tsx
var root_exports = {};
__export(root_exports, {
  default: () => App,
  links: () => links,
  loader: () => loader,
  meta: () => meta
});
init_react();
var import_remix4 = __toModule(require_remix());

// app/tailwind.css
var tailwind_default = "/build/_assets/tailwind-ZGKG4NNE.css";

// route-module:/Users/chidiebube/Projects/wordle/app/root.tsx
var import_react_toastify = __toModule(require("react-toastify"));

// app/global.css
var global_default = "/build/_assets/global-QOPNEI5R.css";

// app/components/Navbar.tsx
init_react();
var import_react = __toModule(require("react"));
var import_remix2 = __toModule(require_remix());

// app/components/InfoModal.tsx
init_react();
var InfoModal = ({ setInfoModal }) => {
  return /* @__PURE__ */ React.createElement("div", {
    className: "w-screen h-screen bg-black bg-opacity-80 fixed z-50 top-0 left-0 flex items-center justify-center"
  }, /* @__PURE__ */ React.createElement("div", {
    className: "w-11/12 lg:w-1/3 min-h-1/3 bg-blackbg rounded-xl  px-5 py-6 flex items-center relative justify-center text-black"
  }, /* @__PURE__ */ React.createElement("i", {
    className: "absolute top-4 right-4 text-4xl font-bold text-gray-200 cursor-pointer",
    onClick: () => setInfoModal(false)
  }, "\u2717"), /* @__PURE__ */ React.createElement("div", {
    className: "text-center"
  }, /* @__PURE__ */ React.createElement("p", {
    className: "text-xl md:text-2xl lg:text-4xl font-bold m-0 p-0 text-white"
  }, "How To Play"), /* @__PURE__ */ React.createElement("p", {
    className: "text-white my-6 text-md md:text-lg"
  }, "You MUST guess the correct word in 6 tries"), /* @__PURE__ */ React.createElement("p", {
    className: "text-white my-6 text-md md:text-lg"
  }, "Each word contains 5 letters which you should input with the onscreen keyboard, after which you must hit the enter key"), /* @__PURE__ */ React.createElement("p", {
    className: "text-white my-6 text-md md:text-lg"
  }, "You will start at 6 points, and a point will get deducted for every word you guess wrongly"), /* @__PURE__ */ React.createElement("p", {
    className: "my-4 text-lg md:text-2xl text-white font-bold"
  }, "HINTS"), /* @__PURE__ */ React.createElement("div", {
    className: "flex items-center gap-2 mb-4"
  }, /* @__PURE__ */ React.createElement("div", {
    className: `border-gray-300 border-2 rounded-sm p-4 font-bold text-3xl w-14 h-12 short:h-10 flex items-center justify-center text-white bg-green-800`
  }, "W"), /* @__PURE__ */ React.createElement("p", {
    className: "text-white"
  }, "The letter is correct and in the right position")), /* @__PURE__ */ React.createElement("div", {
    className: "flex items-center gap-2 mb-4"
  }, /* @__PURE__ */ React.createElement("div", {
    className: `border-gray-300 border-2 rounded-sm p-4 font-bold text-3xl w-14 h-12 short:h-10 flex items-center justify-center text-white bg-yellow-600`
  }, "W"), /* @__PURE__ */ React.createElement("p", {
    className: "text-white"
  }, "The letter is correct and in the wrong position")), /* @__PURE__ */ React.createElement("div", {
    className: "flex items-center gap-2 mb-4"
  }, /* @__PURE__ */ React.createElement("div", {
    className: `border-gray-300 border-2 rounded-sm p-4 font-bold text-3xl w-14 h-12 short:h-10 flex items-center justify-center text-white bg-gray-900`
  }, "W"), /* @__PURE__ */ React.createElement("p", {
    className: "text-white"
  }, "The letter is NOT part of the word")))));
};
var InfoModal_default = InfoModal;

// app/components/Navbar.tsx
var Navbar = ({ user }) => {
  const [navbar, setNavbar] = (0, import_react.useState)(false);
  const [infoModal, setInfoModal] = (0, import_react.useState)(false);
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("div", {
    className: "px-4 py-3 fixed top-0 w-full z-80 bg-blackbg bg-opacity-90"
  }, /* @__PURE__ */ React.createElement("div", {
    className: "flex justify-between"
  }, /* @__PURE__ */ React.createElement(import_remix2.Link, {
    to: "/",
    className: "text-white font-courgette text-3xl font-bold"
  }, "Wordle Champ"), /* @__PURE__ */ React.createElement("div", {
    className: "flex gap-4 items-center"
  }, /* @__PURE__ */ React.createElement("i", {
    className: "text-white font-bold text-xl cursor-pointer",
    onClick: () => setInfoModal(true)
  }, "\u24D8"), /* @__PURE__ */ React.createElement("div", {
    className: "cursor-pointer",
    onClick: () => setNavbar(!navbar)
  }, /* @__PURE__ */ React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    className: "h-8 w-8",
    fill: "#fff",
    viewBox: "0 0 24 24",
    stroke: "#fff"
  }, /* @__PURE__ */ React.createElement("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 2,
    d: "M4 6h16M4 12h16M4 18h16"
  })))))), /* @__PURE__ */ React.createElement("div", {
    className: `w-8/12 md:w-2/4 lg:1/4 xl:w-1/5 h-full fixed top-0 left-0 bg-gray-700 z-30 py-3 px-4 transition-opacity duration-300 ${navbar ? "opacity-100" : "opacity-0 -z-10"}`
  }, /* @__PURE__ */ React.createElement(import_remix2.Link, {
    to: "/",
    reloadDocument: true,
    className: "text-white font-courgette text-3xl font-bold"
  }, "Wordle Champ"), /* @__PURE__ */ React.createElement("div", {
    className: "h-full w-full flex items-center"
  }, /* @__PURE__ */ React.createElement("ul", null, /* @__PURE__ */ React.createElement("li", {
    className: "my-8"
  }, /* @__PURE__ */ React.createElement(import_remix2.Link, {
    reloadDocument: true,
    className: "text-gray-200 cursor-pointer text-2xl hover:underline hover:text-sky-400 ",
    to: "/"
  }, "Home")), /* @__PURE__ */ React.createElement("li", {
    className: "my-8"
  }, /* @__PURE__ */ React.createElement(import_remix2.Link, {
    reloadDocument: true,
    className: "text-gray-200 cursor-pointer text-2xl hover:underline hover:text-sky-400",
    to: "/play"
  }, "Play")), /* @__PURE__ */ React.createElement("li", {
    className: "my-8"
  }, /* @__PURE__ */ React.createElement(import_remix2.Link, {
    reloadDocument: true,
    className: "text-gray-200 cursor-pointer text-2xl hover:underline hover:text-sky-400",
    to: "/leaderboard"
  }, "Leaderboard")), /* @__PURE__ */ React.createElement("li", {
    className: "my-8"
  }, /* @__PURE__ */ React.createElement(import_remix2.Link, {
    reloadDocument: true,
    className: "text-gray-200 cursor-pointer text-2xl hover:underline hover:text-sky-400",
    to: "/versus"
  }, "1 vs 1")), /* @__PURE__ */ React.createElement("li", {
    className: "my-8"
  }, /* @__PURE__ */ React.createElement(import_remix2.Link, {
    reloadDocument: true,
    className: "text-gray-200 cursor-pointer text-2xl hover:underline hover:text-sky-400",
    to: user ? "/logout" : "/login"
  }, user ? "Logout" : "Login"))))), infoModal && /* @__PURE__ */ React.createElement(InfoModal_default, {
    setInfoModal
  }));
};
var Navbar_default = Navbar;

// app/utils/session.server.ts
init_react();
var import_bcryptjs = __toModule(require("bcryptjs"));
var import_remix3 = __toModule(require_remix());

// app/utils/db.server.ts
init_react();
var import_client = __toModule(require("@prisma/client"));
var db;
if (false) {
  db = new import_client.PrismaClient();
  db.$connect();
} else {
  if (!global.__db) {
    global.__db = new import_client.PrismaClient();
    global.__db.$connect();
  }
  db = global.__db;
}

// app/utils/session.server.ts
var saltRounds = 10;
async function register({ username, password, country, countryEmoji }) {
  const passwordHash = await import_bcryptjs.default.hash(password, saltRounds);
  const user = await db.user.create({
    data: { username, passwordHash, score: 0, country, countryEmoji }
  });
  return user;
}
async function login({ username, password }) {
  const user = await db.user.findUnique({
    where: { username }
  });
  if (!user)
    return null;
  const isCorrectPassword = await import_bcryptjs.default.compare(password, user.passwordHash);
  if (!isCorrectPassword)
    return null;
  return user;
}
async function getUser(request) {
  const userId = await getUserId(request);
  if (typeof userId !== "string") {
    return null;
  }
  try {
    const user = await db.user.findUnique({
      where: { id: userId }
    });
    return user;
  } catch {
    throw logout(request);
  }
}
async function logout(request) {
  const session = await storage.getSession(request.headers.get("Cookie"));
  return (0, import_remix3.redirect)("/login", {
    headers: {
      "Set-Cookie": await storage.destroySession(session)
    }
  });
}
var sessionSecret = process.env.SESSION_SECRET;
if (!sessionSecret) {
  throw new Error("SESSION_SECRET must be set");
}
var storage = (0, import_remix3.createCookieSessionStorage)({
  cookie: {
    name: "Wordle_session",
    secure: false,
    secrets: [sessionSecret],
    sameSite: "lax",
    path: "/",
    maxAge: 60 * 60 * 24 * 30,
    httpOnly: true
  }
});
async function createUserSession(userId, redirectTo) {
  const session = await storage.getSession();
  session.set("userId", userId);
  return (0, import_remix3.redirect)(redirectTo, {
    headers: {
      "Set-Cookie": await storage.commitSession(session)
    }
  });
}
function getUserSession(request) {
  return storage.getSession(request.headers.get("Cookie"));
}
async function getUserId(request) {
  const session = await getUserSession(request);
  const userId = session.get("userId");
  if (!userId || typeof userId !== "string")
    return null;
  return userId;
}

// route-module:/Users/chidiebube/Projects/wordle/app/root.tsx
var meta = () => {
  return {
    title: "WORDLE CHAMP - Built with Remix!",
    description: "Do you have what it takes to compete globally? Play now!"
  };
};
var links = () => {
  return [
    { rel: "stylesheet", href: tailwind_default },
    { rel: "preconnect", href: "https://fonts.googleapis.com" },
    { rel: "preconnect", href: "https://fonts.gstatic.com", crossOrigin: "true" },
    { rel: "stylesheet", href: global_default },
    {
      rel: "stylesheet",
      href: "https://fonts.googleapis.com/css2?family=Courgette&display=swap"
    },
    {
      rel: "preconnect",
      crossOrigin: "true",
      href: "https://kit.fontawesome.com/36afc40636.js"
    }
  ];
};
var loader = async ({ request }) => {
  let user = await getUser(request);
  return user;
};
function App() {
  const user = (0, import_remix4.useLoaderData)();
  return /* @__PURE__ */ React.createElement("html", {
    lang: "en"
  }, /* @__PURE__ */ React.createElement("head", null, /* @__PURE__ */ React.createElement("meta", {
    charSet: "utf-8"
  }), /* @__PURE__ */ React.createElement("meta", {
    name: "viewport",
    content: "width=device-width,initial-scale=1"
  }), /* @__PURE__ */ React.createElement(import_remix4.Meta, null), /* @__PURE__ */ React.createElement(import_remix4.Links, null)), /* @__PURE__ */ React.createElement("body", null, /* @__PURE__ */ React.createElement(Navbar_default, {
    user
  }), /* @__PURE__ */ React.createElement(import_react_toastify.ToastContainer, null), /* @__PURE__ */ React.createElement(import_remix4.Outlet, null), /* @__PURE__ */ React.createElement(import_remix4.ScrollRestoration, null), /* @__PURE__ */ React.createElement(import_remix4.Scripts, null), /* @__PURE__ */ React.createElement(import_remix4.LiveReload, null)));
}

// route-module:/Users/chidiebube/Projects/wordle/app/routes/leaderboard.tsx
var leaderboard_exports = {};
__export(leaderboard_exports, {
  ErrorBoundary: () => ErrorBoundary,
  default: () => leaderboard_default,
  loader: () => loader2
});
init_react();
var import_remix5 = __toModule(require_remix());

// app/components/Pagination.tsx
init_react();
var Pagination = ({ users, paginate, totalUsers, page, lastPage }) => {
  return /* @__PURE__ */ React.createElement("div", {
    className: "w-full shadow-slate-400 shadow-lg p-2 mt-4"
  }, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("ul", {
    className: "flex justify-center items-center"
  }, /* @__PURE__ */ React.createElement("li", {
    onClick: () => paginate(1),
    className: `${page === 1 ? "disabled" : ""} mr-2 text-blue-600 text-sm md:text-base font-bold cursor-pointer`
  }, /* @__PURE__ */ React.createElement("span", null, "First")), /* @__PURE__ */ React.createElement("li", {
    onClick: () => paginate(+page - 1),
    className: `${page === 1 ? "disabled" : ""}  mr-2 text-blue-600 text-sm md:text-base font-bold cursor-pointer`
  }, /* @__PURE__ */ React.createElement("span", null, "Previous")), new Array(lastPage).fill("x").map((c, index) => {
    let item = index + 1;
    return /* @__PURE__ */ React.createElement("li", {
      key: index,
      className: `${page === item ? "active" : ""} mx-2 border-2 rounded-full border-blue-600 w-8 cursor-pointer text-center text-blue-600 text-sm md:text-lg`,
      onClick: () => paginate(item)
    }, /* @__PURE__ */ React.createElement("span", null, item));
  }), /* @__PURE__ */ React.createElement("li", {
    onClick: () => paginate(+page + 1),
    className: `${page === lastPage ? "disabled" : ""} ml-2 text-blue-600 text-sm md:text-base font-bold cursor-pointer`
  }, /* @__PURE__ */ React.createElement("span", null, "Next")), /* @__PURE__ */ React.createElement("li", {
    onClick: () => paginate(lastPage),
    className: `${page === lastPage ? "disabled" : ""} ml-2 text-blue-600 text-sm md:text-base font-bold cursor-pointer`
  }, /* @__PURE__ */ React.createElement("span", null, "Last")))));
};
var Pagination_default = Pagination;

// app/utils/queries.server.ts
init_react();
async function updateScore(userId, score) {
  let updatedUser = await db.user.update({
    where: { id: userId },
    data: {
      score: {
        increment: score
      }
    }
  });
  return updatedUser;
}
async function getUsers(skip, total) {
  let users = await db.user.findMany({
    skip,
    take: total,
    orderBy: {
      score: "desc"
    }
  });
  let totalUsers = await db.user.count();
  return {
    users,
    totalUsers
  };
}

// route-module:/Users/chidiebube/Projects/wordle/app/routes/leaderboard.tsx
var loader2 = async ({ request }) => {
  let user = await getUser(request);
  const url = new URL(request.url);
  const page = url.searchParams.get("page") || 1;
  let perPage = 10;
  let skip = perPage * page - perPage;
  const { users, totalUsers } = await getUsers(skip, perPage);
  let lastPage = Math.ceil(totalUsers / perPage);
  return { users, totalUsers, page, lastPage, perPage, user };
};
var Leaderboard = () => {
  const submit = (0, import_remix5.useSubmit)();
  const { users, totalUsers, page, lastPage, perPage, user } = (0, import_remix5.useLoaderData)();
  console.log(user);
  const paginate = (goTo) => {
    if (goTo < 1 || goTo > +lastPage) {
      return;
    }
    submit({ page: String(goTo) }, { method: "get" });
  };
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("div", {
    className: "bg-blackbg min-h-screen w-screen py-24"
  }, /* @__PURE__ */ React.createElement("div", {
    className: "flex justify-center items-center h-full w-full"
  }, /* @__PURE__ */ React.createElement("div", {
    className: "bg-white rounded-lg w-11/12 md:w-2/4 p-6 min-h-min"
  }, /* @__PURE__ */ React.createElement("h3", {
    className: "text-center text-2xl mb-6 font-bold"
  }, "Leaderboard"), !user && /* @__PURE__ */ React.createElement("p", {
    className: "text-blue-600"
  }, "You have to sign in to appear on the leaderboard"), /* @__PURE__ */ React.createElement("table", {
    className: "border-collapse w-full"
  }, /* @__PURE__ */ React.createElement("thead", null, /* @__PURE__ */ React.createElement("tr", {
    className: "shadow-md"
  }, /* @__PURE__ */ React.createElement("th", {
    className: "text-center py-6 text-sm md:text-base",
    onClick: () => paginate(1)
  }, "Rank"), /* @__PURE__ */ React.createElement("th", {
    className: "text-center py-6 text-sm md:text-base"
  }, "Username"), /* @__PURE__ */ React.createElement("th", {
    className: "text-center py-6 text-sm md:text-base"
  }, "Country"), /* @__PURE__ */ React.createElement("th", {
    className: "text-center py-6 text-sm md:text-base"
  }, "Points"))), /* @__PURE__ */ React.createElement("tbody", {
    className: ""
  }, users.length ? users.map((user2, i) => /* @__PURE__ */ React.createElement("tr", {
    className: "border-b-2 border-solid",
    key: i
  }, /* @__PURE__ */ React.createElement("td", {
    className: `text-center py-4 text-sm md:text-base ${i === 0 ? "text-blue-600 font-bold" : null}`
  }, "#", i + 1 + perPage * page - perPage), /* @__PURE__ */ React.createElement("td", {
    className: `text-center py-4 text-sm md:text-base ${i === 0 ? "text-blue-600 font-bold" : null}`
  }, user2.username), /* @__PURE__ */ React.createElement("td", {
    className: `text-center py-4 text-sm md:text-base ${i === 0 ? "text-blue-600 font-bold" : null}`
  }, user2.country + " " + user2.countryEmoji), /* @__PURE__ */ React.createElement("td", {
    className: `text-center py-4 text-sm md:text-base ${i === 0 ? "text-blue-600 font-bold" : null}`
  }, user2.score))) : null)), /* @__PURE__ */ React.createElement(Pagination_default, {
    users,
    paginate,
    totalUsers,
    page,
    lastPage
  })))));
};
function ErrorBoundary() {
  return /* @__PURE__ */ React.createElement("div", {
    className: "w-screen h-screen bg-blackbg flex items-center justify-center"
  }, /* @__PURE__ */ React.createElement("div", {
    className: "text-center"
  }, /* @__PURE__ */ React.createElement("p", {
    className: "text-white font-bold text-4xl"
  }, "An error ?! I knew software engineering was not my thing! "), /* @__PURE__ */ React.createElement(import_remix5.Link, {
    className: "text-blue-600 text-2xl underline mt-4 block",
    to: "/leaderboard"
  }, "Go Back")));
}
var leaderboard_default = Leaderboard;

// route-module:/Users/chidiebube/Projects/wordle/app/routes/register.tsx
var register_exports = {};
__export(register_exports, {
  action: () => action,
  default: () => register_default
});
init_react();
var import_remix6 = __toModule(require_remix());

// app/utils/validation.ts
init_react();
function validateUsername(username) {
  if (typeof username !== "string" || username.length < 3 || username.length > 10) {
    return `Length of Username must be between 3 and 10 characters`;
  }
}
function validatePassword(password) {
  if (typeof password !== "string" || password.length < 6) {
    return `Passwords must be at least 6 characters long`;
  }
}
function validateCountry(country) {
  if (typeof country !== "string" || country.length < 4) {
    return `Please select a valid country`;
  }
}

// app/components/CountrySelect.tsx
init_react();
var import_react_select = __toModule(require("react-select"));
var import_countries_list = __toModule(require("countries-list"));
var import_react2 = __toModule(require("react"));
var CountrySelect = () => {
  const [options, setOptions] = (0, import_react2.useState)([]);
  const customStyles = {
    container: (provided) => __spreadProps(__spreadValues({}, provided), {
      border: "1px solid #000",
      borderRadius: "6px"
    }),
    input: (provided) => __spreadProps(__spreadValues({}, provided), {
      padding: 16,
      color: "#000"
    }),
    singleValue: (provided) => __spreadProps(__spreadValues({}, provided), {
      fontSize: "18px"
    })
  };
  (0, import_react2.useEffect)(() => {
    buildData();
  }, []);
  const buildData = () => {
    let data = Object.values(import_countries_list.countries).map(({ name, emoji }) => ({ label: name + " " + emoji, value: name + "//" + emoji, emoji }));
    setOptions(data);
  };
  return /* @__PURE__ */ React.createElement(import_react_select.default, {
    options,
    styles: customStyles,
    name: "country"
  });
};
var CountrySelect_default = CountrySelect;

// route-module:/Users/chidiebube/Projects/wordle/app/routes/register.tsx
var badRequest = (data) => (0, import_remix6.json)(data, { status: 400 });
var action = async ({ request }) => {
  const form = await request.formData();
  const username = form.get("username");
  const password = form.get("password");
  const countryData = form.get("country");
  const country = countryData.split("//")[0];
  const countryEmoji = countryData.split("//")[1];
  if (typeof username !== "string" || typeof password !== "string") {
    return badRequest({
      formError: `Form not submitted correctly.`
    });
  }
  const fields = { username, password, country };
  const fieldErrors = {
    username: validateUsername(username),
    password: validatePassword(password),
    country: validateCountry(country)
  };
  if (Object.values(fieldErrors).some(Boolean))
    return badRequest({ fieldErrors, fields });
  const user = await register({ username, password, country, countryEmoji });
  console.log({ user });
  if (!user) {
    return {
      fields,
      formError: `Username/Password combination is incorrect`
    };
  }
  return createUserSession(user.id, "/play");
};
var Register = () => {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i;
  const actionData = (0, import_remix6.useActionData)();
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("div", {
    className: "bg-blackbg h-screen w-screen"
  }, /* @__PURE__ */ React.createElement("div", {
    className: "h-full w-full flex items-center justify-center"
  }, /* @__PURE__ */ React.createElement("div", {
    className: "bg-white w-11/12 md:w-2/4 lg:w-1/3 h-4/5 p-8 rounded-lg flex items-center justify-center"
  }, /* @__PURE__ */ React.createElement(import_remix6.Form, {
    method: "post",
    className: "w-full",
    autoComplete: "off",
    "aria-describedby": (actionData == null ? void 0 : actionData.formError) ? "There was an error" : void 0
  }, /* @__PURE__ */ React.createElement("legend", {
    className: "text-2xl font-bold"
  }, "Register"), /* @__PURE__ */ React.createElement("div", {
    className: "my-6"
  }, /* @__PURE__ */ React.createElement("label", {
    className: "block text-xl",
    htmlFor: "username"
  }, "Username"), /* @__PURE__ */ React.createElement("input", {
    id: "username",
    autoComplete: "off",
    autoCorrect: "off",
    name: "username",
    placeholder: "Enter Username",
    className: "p-4 rounded-md w-full border-blackbg border-solid border-2 bg-transparent text-lg",
    defaultValue: (_a = actionData == null ? void 0 : actionData.fields) == null ? void 0 : _a.username,
    "aria-invalid": Boolean((_b = actionData == null ? void 0 : actionData.fieldErrors) == null ? void 0 : _b.username),
    "aria-describedby": ((_c = actionData == null ? void 0 : actionData.fieldErrors) == null ? void 0 : _c.username) ? "username-error" : void 0
  }), ((_d = actionData == null ? void 0 : actionData.fieldErrors) == null ? void 0 : _d.username) ? /* @__PURE__ */ React.createElement("p", {
    className: "text-sm text-red-500",
    role: "alert",
    id: "username-error"
  }, actionData == null ? void 0 : actionData.fieldErrors.username) : null), /* @__PURE__ */ React.createElement("div", {
    className: "my-6"
  }, /* @__PURE__ */ React.createElement("label", {
    className: "block text-xl",
    htmlFor: "country"
  }, "Country"), /* @__PURE__ */ React.createElement(CountrySelect_default, null), ((_e = actionData == null ? void 0 : actionData.fieldErrors) == null ? void 0 : _e.country) ? /* @__PURE__ */ React.createElement("p", {
    className: "text-sm text-red-500",
    role: "alert",
    id: "password-error"
  }, actionData == null ? void 0 : actionData.fieldErrors.country) : null), /* @__PURE__ */ React.createElement("div", {
    className: "my-6"
  }, /* @__PURE__ */ React.createElement("label", {
    className: "block text-xl",
    htmlFor: "password"
  }, "Password"), /* @__PURE__ */ React.createElement("input", {
    id: "password",
    name: "password",
    placeholder: "Enter Password",
    type: "password",
    className: "p-4 rounded-md w-full border-blackbg border-solid border-2 bg-transparent text-lg",
    defaultValue: (_f = actionData == null ? void 0 : actionData.fields) == null ? void 0 : _f.password,
    "aria-invalid": Boolean((_g = actionData == null ? void 0 : actionData.fieldErrors) == null ? void 0 : _g.password) || void 0,
    "aria-describedby": ((_h = actionData == null ? void 0 : actionData.fieldErrors) == null ? void 0 : _h.password) ? "password-error" : void 0
  }), ((_i = actionData == null ? void 0 : actionData.fieldErrors) == null ? void 0 : _i.password) ? /* @__PURE__ */ React.createElement("p", {
    className: "text-sm text-red-500",
    role: "alert",
    id: "password-error"
  }, actionData == null ? void 0 : actionData.fieldErrors.password) : null), /* @__PURE__ */ React.createElement("div", {
    id: "form-error-message"
  }, (actionData == null ? void 0 : actionData.formError) ? /* @__PURE__ */ React.createElement("p", {
    className: "text-sm text-red-500",
    role: "alert"
  }, actionData == null ? void 0 : actionData.formError) : null), /* @__PURE__ */ React.createElement("div", {
    className: "text-right"
  }, /* @__PURE__ */ React.createElement("button", {
    className: "bg-sky-500 px-5 py-3 rounded-md text-white text-center cursor-pointer w-2/4 text-sm md:text-lg"
  }, "Submit")), /* @__PURE__ */ React.createElement("p", {
    className: "text-center py-6"
  }, "Already have an account ?", " ", /* @__PURE__ */ React.createElement(import_remix6.Link, {
    to: "/login",
    className: "text-sky-500 underline cursor-pointer"
  }, "Login")))))));
};
var register_default = Register;

// route-module:/Users/chidiebube/Projects/wordle/app/routes/logout.tsx
var logout_exports = {};
__export(logout_exports, {
  loader: () => loader3
});
init_react();
var loader3 = async ({ request }) => {
  return logout(request);
};

// route-module:/Users/chidiebube/Projects/wordle/app/routes/versus.tsx
var versus_exports = {};
__export(versus_exports, {
  default: () => versus_default
});
init_react();
var versus = () => {
  return /* @__PURE__ */ React.createElement("div", {
    className: "bg-blackbg h-screen w-screen flex flex-col items-center justify-center"
  }, /* @__PURE__ */ React.createElement("h1", {
    className: "text-white text-3xl md:text-5xl lg:text-7xl text-center"
  }, "COMING SOON"), /* @__PURE__ */ React.createElement("p", {
    className: "text-center mt-6 text-white text-xl"
  }, "Compete ", /* @__PURE__ */ React.createElement("span", {
    className: "text-blue-600"
  }, "LIVE"), " with your friends for who to guess the correct word first!"));
};
var versus_default = versus;

// route-module:/Users/chidiebube/Projects/wordle/app/routes/index.tsx
var routes_exports = {};
__export(routes_exports, {
  default: () => Index,
  loader: () => loader4,
  meta: () => meta2
});
init_react();
var import_remix7 = __toModule(require_remix());
var meta2 = () => {
  return {
    title: "WORDLE CHAMP - Built with Remix!",
    description: "Do you have what it takes to compete globally? Play now!"
  };
};
var loader4 = async ({ request }) => {
  let user = await getUser(request);
  console.log(user);
  return user;
};
function Index() {
  const user = (0, import_remix7.useLoaderData)();
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("div", {
    className: "bg-blackbg h-screen w-screen"
  }, /* @__PURE__ */ React.createElement("div", {
    className: "flex items-center justify-center h-full w-full"
  }, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("h3", {
    className: "text-white text-3xl md:text-5xl font-bold text-center"
  }, "WORDLE CHAMP"), !user ? /* @__PURE__ */ React.createElement("p", {
    className: "text-white text-lg text-center mt-4"
  }, "Do you have what it takes to compete globally ?", " ", /* @__PURE__ */ React.createElement(import_remix7.Link, {
    to: "/register",
    className: "text-sky-400 cursor-pointer"
  }, "Sign up"), " ", "to appear on the global leaderboard") : /* @__PURE__ */ React.createElement("p", {
    className: "text-white text-lg text-center mt-4"
  }, "Welcome ", /* @__PURE__ */ React.createElement("span", {
    className: "text-blue-400"
  }, user.username), ", you current have ", user.score, " points. You can do better!"), /* @__PURE__ */ React.createElement("div", {
    className: "my-8 flex justify-evenly"
  }, /* @__PURE__ */ React.createElement(import_remix7.Link, {
    to: "/play",
    className: "bg-blue-600 text-white text-md md:text-xl w-1/3 rounded-lg py-3 text-center cursor-pointer"
  }, "Play"), /* @__PURE__ */ React.createElement(import_remix7.Link, {
    to: "/leaderboard",
    className: "bg-blue-600 text-white text-md md:text-xl w-1/3 rounded-lg py-3 text-center cursor-pointer"
  }, "Leaderboard"))))));
}

// route-module:/Users/chidiebube/Projects/wordle/app/routes/login.tsx
var login_exports = {};
__export(login_exports, {
  action: () => action2,
  default: () => login_default
});
init_react();
var import_remix8 = __toModule(require_remix());
var badRequest2 = (data) => (0, import_remix8.json)(data, { status: 400 });
var action2 = async ({ request }) => {
  const form = await request.formData();
  const username = form.get("username");
  const password = form.get("password");
  if (typeof username !== "string" || typeof password !== "string") {
    return badRequest2({
      formError: `Form not submitted correctly.`
    });
  }
  const fields = { username, password };
  const fieldErrors = {
    username: validateUsername(username),
    password: validatePassword(password)
  };
  if (Object.values(fieldErrors).some(Boolean))
    return badRequest2({ fieldErrors, fields });
  const user = await login({ username, password });
  console.log({ user });
  if (!user) {
    return {
      fields,
      formError: `Username/Password combination is incorrect`
    };
  }
  return createUserSession(user.id, "/play");
};
var Login = () => {
  var _a, _b;
  const actionData = (0, import_remix8.useActionData)();
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("div", {
    className: "bg-blackbg h-screen w-screen"
  }, /* @__PURE__ */ React.createElement("div", {
    className: "h-full w-full flex items-center justify-center"
  }, /* @__PURE__ */ React.createElement("div", {
    className: "bg-white w-11/12 md:w-2/4 lg:w-1/3 min-h-3/5 p-8 short:h-3/4 rounded-lg flex items-center justify-center"
  }, /* @__PURE__ */ React.createElement(import_remix8.Form, {
    method: "post",
    className: "w-full",
    autoComplete: "off"
  }, /* @__PURE__ */ React.createElement("legend", {
    className: "text-xl font-bold"
  }, "Log in"), /* @__PURE__ */ React.createElement("div", {
    className: "my-6"
  }, /* @__PURE__ */ React.createElement("label", {
    className: "block text-xl"
  }, "Username"), /* @__PURE__ */ React.createElement("input", {
    autoComplete: "off",
    autoCorrect: "off",
    name: "username",
    placeholder: "Enter Username",
    className: "p-4 rounded-md w-full border-blackbg border-solid border-2 bg-transparent text-lg"
  }), ((_a = actionData == null ? void 0 : actionData.fieldErrors) == null ? void 0 : _a.username) ? /* @__PURE__ */ React.createElement("p", {
    className: "text-sm text-red-500",
    role: "alert",
    id: "password-error"
  }, actionData == null ? void 0 : actionData.fieldErrors.username) : null), /* @__PURE__ */ React.createElement("div", {
    className: "my-6"
  }, /* @__PURE__ */ React.createElement("label", {
    className: "block text-xl"
  }, "Password"), /* @__PURE__ */ React.createElement("input", {
    name: "password",
    placeholder: "Enter Password",
    type: "password",
    className: "p-4 rounded-md w-full border-blackbg border-solid border-2 bg-transparent text-lg"
  }), ((_b = actionData == null ? void 0 : actionData.fieldErrors) == null ? void 0 : _b.password) ? /* @__PURE__ */ React.createElement("p", {
    className: "text-sm text-red-500",
    role: "alert",
    id: "password-error"
  }, actionData == null ? void 0 : actionData.fieldErrors.password) : null), /* @__PURE__ */ React.createElement("div", {
    className: "text-right"
  }, /* @__PURE__ */ React.createElement("button", {
    className: "bg-sky-500 px-5 py-3 rounded-md text-white text-center cursor-pointer w-2/4 text-sm md:text-lg"
  }, "Submit")), /* @__PURE__ */ React.createElement("p", {
    className: "text-center py-6"
  }, "Don't have an account ?", " ", /* @__PURE__ */ React.createElement(import_remix8.Link, {
    to: "/register",
    className: "text-sky-500 underline cursor-pointer"
  }, "Register")))))));
};
var login_default = Login;

// route-module:/Users/chidiebube/Projects/wordle/app/routes/play.tsx
var play_exports = {};
__export(play_exports, {
  ErrorBoundary: () => ErrorBoundary2,
  action: () => action3,
  default: () => play_default,
  loader: () => loader5
});
init_react();

// app/helpers/validateEntry.ts
init_react();
var ALPHABETS = [
  "A",
  "B",
  "C",
  "D",
  "E",
  "F",
  "G",
  "H",
  "I",
  "J",
  "K",
  "L",
  "M",
  "N",
  "O",
  "P",
  "Q",
  "R",
  "S",
  "T",
  "U",
  "V",
  "W",
  "X",
  "Y",
  "Z",
  "BACKSPACE",
  "ENTER"
];
var validateEntry = (letter) => {
  if (!letter) {
    return false;
  }
  if (!ALPHABETS.includes(letter.toUpperCase())) {
    return false;
  }
  return letter.toUpperCase();
};
var isFullRow = (word, length) => {
  if (!word || !word.length) {
    return false;
  }
  return word.length === length;
};

// route-module:/Users/chidiebube/Projects/wordle/app/routes/play.tsx
var import_react3 = __toModule(require("react"));
var import_remix9 = __toModule(require_remix());

// app/components/Keyboard.tsx
init_react();
var letters = "Q,W,E,R,T,Y,U,I,O,P A,S,D,F,G,H,J,K,L Enter,Z,X,C,V,B,N,M,Backspace";
var Keyboard = (props) => {
  return /* @__PURE__ */ React.createElement("div", {
    className: "p-2"
  }, letters.split(" ").map((row) => /* @__PURE__ */ React.createElement("div", {
    className: "flex items-center justify-center",
    key: row
  }, row.split(",").map((letter) => {
    return /* @__PURE__ */ React.createElement("span", {
      onClick: () => props.handleEntry(letter),
      className: `border-2  border-gray-300 rounded-sm w-14 h-12 flex items-center justify-center mx-1 my-2 cursor-pointer ${props.keyStyle[letter] || "bg-gray-300"}`,
      key: letter
    }, letter === "Backspace" ? /* @__PURE__ */ React.createElement("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      className: "h-6 w-6",
      fill: "none",
      viewBox: "0 0 24 24",
      stroke: "currentColor"
    }, /* @__PURE__ */ React.createElement("path", {
      strokeLinecap: "round",
      strokeLinejoin: "round",
      strokeWidth: 1.5,
      d: "M12 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M3 12l6.414 6.414a2 2 0 001.414.586H19a2 2 0 002-2V7a2 2 0 00-2-2h-8.172a2 2 0 00-1.414.586L3 12z"
    })) : letter);
  }))));
};
var Keyboard_default = Keyboard;

// app/utils/toastHandler.ts
init_react();
var import_react_toastify2 = __toModule(require("react-toastify"));
var toastHandler = (message = "\u{1F984} Wow so easy!", time = 5e3) => {
  return (0, import_react_toastify2.toast)(message, {
    position: "top-center",
    autoClose: time,
    hideProgressBar: false,
    closeOnClick: true,
    pauseOnHover: true,
    draggable: true,
    progress: void 0
  });
};

// app/words.ts
init_react();
var words = [
  "aahed",
  "aalii",
  "aargh",
  "abaca",
  "abaci",
  "aback",
  "abaft",
  "abaka",
  "abamp",
  "abase",
  "abash",
  "abate",
  "abaya",
  "abbas",
  "abbes",
  "abbey",
  "abbot",
  "abeam",
  "abele",
  "abets",
  "abhor",
  "abide",
  "abled",
  "abler",
  "ables",
  "abmho",
  "abode",
  "abohm",
  "aboil",
  "aboma",
  "aboon",
  "abort",
  "about",
  "above",
  "abris",
  "abuse",
  "abuts",
  "abuzz",
  "abyes",
  "abysm",
  "abyss",
  "acais",
  "acari",
  "acerb",
  "aceta",
  "ached",
  "aches",
  "achoo",
  "acids",
  "acidy",
  "acing",
  "acini",
  "ackee",
  "acmes",
  "acmic",
  "acned",
  "acnes",
  "acock",
  "acold",
  "acorn",
  "acred",
  "acres",
  "acrid",
  "acros",
  "acted",
  "actin",
  "actor",
  "acute",
  "acyls",
  "adage",
  "adapt",
  "adbot",
  "addax",
  "added",
  "adder",
  "addle",
  "adeem",
  "adept",
  "adieu",
  "adios",
  "adits",
  "adman",
  "admen",
  "admin",
  "admit",
  "admix",
  "adobe",
  "adobo",
  "adopt",
  "adore",
  "adorn",
  "adown",
  "adoze",
  "adult",
  "adunc",
  "adust",
  "adyta",
  "adzed",
  "adzes",
  "aecia",
  "aedes",
  "aegis",
  "aeons",
  "aerie",
  "afars",
  "affix",
  "afire",
  "afoot",
  "afore",
  "afoul",
  "afrit",
  "afros",
  "after",
  "again",
  "agama",
  "agape",
  "agars",
  "agate",
  "agave",
  "agaze",
  "agene",
  "agent",
  "agers",
  "agger",
  "aggie",
  "aggro",
  "aghas",
  "agile",
  "aging",
  "agios",
  "agism",
  "agist",
  "agita",
  "aglee",
  "aglet",
  "agley",
  "agloo",
  "aglow",
  "aglus",
  "agmas",
  "agone",
  "agons",
  "agony",
  "agora",
  "agree",
  "agria",
  "agros",
  "agued",
  "agues",
  "ahead",
  "ahing",
  "ahold",
  "ahull",
  "aided",
  "aider",
  "aides",
  "ailed",
  "aimed",
  "aimer",
  "aioli",
  "aired",
  "airer",
  "airns",
  "airth",
  "airts",
  "aisle",
  "aitch",
  "aiver",
  "aiyee",
  "ajies",
  "ajiva",
  "ajuga",
  "akees",
  "akela",
  "akene",
  "alack",
  "alamo",
  "aland",
  "alane",
  "alang",
  "alans",
  "alant",
  "alarm",
  "alary",
  "alate",
  "albas",
  "album",
  "alcid",
  "alder",
  "aldol",
  "alecs",
  "alefs",
  "aleph",
  "alert",
  "alfas",
  "algae",
  "algal",
  "algas",
  "algid",
  "algin",
  "algor",
  "algum",
  "alias",
  "alibi",
  "alien",
  "alifs",
  "align",
  "alike",
  "aline",
  "alist",
  "alive",
  "aliya",
  "alkie",
  "alkyd",
  "alkyl",
  "allay",
  "allee",
  "alley",
  "allod",
  "allot",
  "allow",
  "alloy",
  "allyl",
  "almah",
  "almas",
  "almeh",
  "almes",
  "almud",
  "almug",
  "aloes",
  "aloft",
  "aloha",
  "aloin",
  "alone",
  "along",
  "aloof",
  "aloud",
  "alpha",
  "altar",
  "alter",
  "altho",
  "altos",
  "alula",
  "alums",
  "alvar",
  "alway",
  "amahs",
  "amain",
  "amass",
  "amaze",
  "amber",
  "ambit",
  "amble",
  "ambos",
  "ambry",
  "ameba",
  "ameer",
  "amend",
  "amens",
  "ament",
  "amias",
  "amice",
  "amici",
  "amide",
  "amido",
  "amids",
  "amies",
  "amiga",
  "amigo",
  "amine",
  "amino",
  "amins",
  "amirs",
  "amiss",
  "amity",
  "ammos",
  "amnia",
  "amnic",
  "amnio",
  "amoks",
  "amole",
  "among",
  "amort",
  "amour",
  "amped",
  "ample",
  "amply",
  "ampul",
  "amrit",
  "amuck",
  "amuse",
  "amyls",
  "ancho",
  "ancon",
  "andro",
  "anear",
  "anele",
  "anent",
  "angas",
  "angel",
  "anger",
  "angle",
  "anglo",
  "angry",
  "angst",
  "anile",
  "anils",
  "anima",
  "anime",
  "animi",
  "anion",
  "anise",
  "ankhs",
  "ankle",
  "ankus",
  "anlas",
  "annal",
  "annas",
  "annex",
  "annoy",
  "annul",
  "anoas",
  "anode",
  "anole",
  "anomy",
  "ansae",
  "antae",
  "antas",
  "anted",
  "antes",
  "antic",
  "antis",
  "antra",
  "antre",
  "antsy",
  "anura",
  "anvil",
  "anyon",
  "aorta",
  "apace",
  "apart",
  "apeak",
  "apeek",
  "apers",
  "apery",
  "aphid",
  "aphis",
  "apian",
  "aping",
  "apish",
  "apnea",
  "apods",
  "aport",
  "appal",
  "appel",
  "apple",
  "apply",
  "apres",
  "apron",
  "apses",
  "apsis",
  "apter",
  "aptly",
  "aquae",
  "aquas",
  "araks",
  "arame",
  "arbor",
  "arced",
  "archi",
  "arcus",
  "ardeb",
  "ardor",
  "areae",
  "areal",
  "areas",
  "areca",
  "areic",
  "arena",
  "arene",
  "arepa",
  "arete",
  "argal",
  "argil",
  "argle",
  "argol",
  "argon",
  "argot",
  "argue",
  "argus",
  "arhat",
  "arias",
  "ariel",
  "arils",
  "arise",
  "arles",
  "armed",
  "armer",
  "armet",
  "armor",
  "aroid",
  "aroma",
  "arose",
  "arpen",
  "arras",
  "array",
  "arris",
  "arrow",
  "arroz",
  "arses",
  "arsis",
  "arson",
  "artal",
  "artel",
  "artsy",
  "arums",
  "arval",
  "arvos",
  "aryls",
  "asana",
  "ascon",
  "ascot",
  "ascus",
  "asdic",
  "ashed",
  "ashen",
  "ashes",
  "aside",
  "asked",
  "asker",
  "askew",
  "askoi",
  "askos",
  "aspen",
  "asper",
  "aspic",
  "aspis",
  "assai",
  "assay",
  "asses",
  "asset",
  "aster",
  "astir",
  "asura",
  "aswim",
  "asyla",
  "ataps",
  "ataxy",
  "atigi",
  "atilt",
  "atlas",
  "atman",
  "atmas",
  "atoll",
  "atoms",
  "atomy",
  "atone",
  "atony",
  "atopy",
  "atria",
  "atrip",
  "attar",
  "attic",
  "audad",
  "audio",
  "audit",
  "auger",
  "aught",
  "augur",
  "aulic",
  "aunts",
  "aunty",
  "aurae",
  "aural",
  "aurar",
  "auras",
  "aurei",
  "aures",
  "auric",
  "auris",
  "aurum",
  "autos",
  "auxin",
  "avail",
  "avant",
  "avast",
  "avens",
  "avers",
  "avert",
  "avgas",
  "avian",
  "avion",
  "aviso",
  "avoid",
  "avows",
  "await",
  "awake",
  "award",
  "aware",
  "awash",
  "awful",
  "awing",
  "awned",
  "awoke",
  "awols",
  "axels",
  "axial",
  "axile",
  "axils",
  "axing",
  "axiom",
  "axion",
  "axite",
  "axled",
  "axles",
  "axman",
  "axmen",
  "axone",
  "axons",
  "ayahs",
  "ayaya",
  "ayins",
  "azans",
  "azide",
  "azido",
  "azine",
  "azlon",
  "azoic",
  "azole",
  "azons",
  "azote",
  "azoth",
  "azuki",
  "azure",
  "baaed",
  "baals",
  "babas",
  "babel",
  "babes",
  "babka",
  "baboo",
  "babul",
  "babus",
  "bacca",
  "baccy",
  "backs",
  "bacon",
  "baddy",
  "badge",
  "badly",
  "baffs",
  "baffy",
  "bagel",
  "baggy",
  "bahts",
  "bails",
  "bairn",
  "baith",
  "baits",
  "baiza",
  "baize",
  "baked",
  "baker",
  "bakes",
  "balas",
  "balds",
  "baldy",
  "baled",
  "baler",
  "bales",
  "balks",
  "balky",
  "balls",
  "bally",
  "balms",
  "balmy",
  "balsa",
  "balti",
  "banal",
  "banco",
  "bancs",
  "banda",
  "bands",
  "bandy",
  "baned",
  "banes",
  "bangs",
  "banjo",
  "banks",
  "banns",
  "banty",
  "barbe",
  "barbs",
  "barca",
  "barde",
  "bards",
  "bared",
  "barer",
  "bares",
  "barfi",
  "barfs",
  "barge",
  "baric",
  "barks",
  "barky",
  "barms",
  "barmy",
  "barns",
  "barny",
  "baron",
  "barre",
  "barry",
  "barye",
  "basal",
  "based",
  "baser",
  "bases",
  "basic",
  "basil",
  "basin",
  "basis",
  "basks",
  "bassi",
  "basso",
  "bassy",
  "baste",
  "basts",
  "batch",
  "bated",
  "bates",
  "bathe",
  "baths",
  "batik",
  "baton",
  "batts",
  "battu",
  "batty",
  "bauds",
  "baulk",
  "bawds",
  "bawdy",
  "bawks",
  "bawls",
  "bawns",
  "bawty",
  "bayed",
  "bayer",
  "bayou",
  "bazar",
  "bazoo",
  "beach",
  "beads",
  "beady",
  "beaks",
  "beaky",
  "beals",
  "beams",
  "beamy",
  "beano",
  "beans",
  "beard",
  "bears",
  "beast",
  "beats",
  "beaus",
  "beaut",
  "beaux",
  "bebop",
  "becap",
  "becks",
  "bedad",
  "bedel",
  "bedew",
  "bedim",
  "beech",
  "beedi",
  "beefs",
  "beefy",
  "beeps",
  "beers",
  "beery",
  "beets",
  "befit",
  "befog",
  "begad",
  "began",
  "begat",
  "begem",
  "beget",
  "begin",
  "begot",
  "begum",
  "begun",
  "beige",
  "beigy",
  "being",
  "belay",
  "belch",
  "belga",
  "belie",
  "belle",
  "bells",
  "belly",
  "belon",
  "below",
  "belts",
  "bemas",
  "bemix",
  "bench",
  "bends",
  "bendy",
  "benes",
  "benne",
  "benni",
  "benny",
  "bento",
  "bents",
  "beret",
  "bergs",
  "berks",
  "berme",
  "berms",
  "berry",
  "berth",
  "beryl",
  "beses",
  "beset",
  "besom",
  "besot",
  "bests",
  "betas",
  "betel",
  "beths",
  "beton",
  "betta",
  "bevel",
  "bevor",
  "bevvy",
  "bewig",
  "bezel",
  "bezil",
  "bhaji",
  "bhang",
  "bhoot",
  "bhuts",
  "biali",
  "bialy",
  "bibbs",
  "bibes",
  "bible",
  "bicep",
  "bices",
  "biddy",
  "bided",
  "bider",
  "bides",
  "bidet",
  "bidis",
  "bield",
  "biers",
  "biffs",
  "biffy",
  "bifid",
  "biggy",
  "bight",
  "bigly",
  "bigos",
  "bigot",
  "bijou",
  "biked",
  "biker",
  "bikes",
  "bikie",
  "bilbo",
  "bilby",
  "biles",
  "bilge",
  "bilgy",
  "bilks",
  "bills",
  "billy",
  "bimah",
  "bimas",
  "bimbo",
  "binal",
  "bindi",
  "binds",
  "biner",
  "bines",
  "binge",
  "bingo",
  "binit",
  "bints",
  "biogs",
  "biome",
  "biont",
  "biota",
  "biped",
  "bipod",
  "birch",
  "birds",
  "birks",
  "birle",
  "birls",
  "birrs",
  "birse",
  "birth",
  "bises",
  "bisks",
  "bison",
  "bitch",
  "biter",
  "bites",
  "bitsy",
  "bitts",
  "bitty",
  "bizes",
  "blabs",
  "black",
  "blade",
  "blaff",
  "blags",
  "blahs",
  "blain",
  "blame",
  "blams",
  "bland",
  "blank",
  "blare",
  "blase",
  "blast",
  "blate",
  "blats",
  "blawn",
  "blaws",
  "blaze",
  "bleak",
  "blear",
  "bleat",
  "blebs",
  "blech",
  "bleed",
  "bleep",
  "blend",
  "blent",
  "bless",
  "blest",
  "blets",
  "blimp",
  "blimy",
  "blind",
  "bling",
  "blini",
  "blink",
  "bliny",
  "blips",
  "bliss",
  "blite",
  "blitz",
  "bloat",
  "blobs",
  "block",
  "blocs",
  "blogs",
  "bloke",
  "blond",
  "blood",
  "bloom",
  "bloop",
  "blots",
  "blown",
  "blows",
  "blowy",
  "blubs",
  "blued",
  "bluer",
  "blues",
  "bluet",
  "bluey",
  "bluff",
  "blume",
  "blunt",
  "blurb",
  "blurs",
  "blurt",
  "blush",
  "blype",
  "board",
  "boars",
  "boart",
  "boast",
  "boats",
  "bobby",
  "bobos",
  "bocce",
  "bocci",
  "bocks",
  "boded",
  "bodes",
  "boeuf",
  "boffo",
  "boffs",
  "bogan",
  "bogey",
  "boggy",
  "bogie",
  "bogle",
  "bogus",
  "bohea",
  "bohos",
  "boils",
  "boing",
  "boite",
  "bokeh",
  "bolar",
  "bolas",
  "bolds",
  "boles",
  "bolls",
  "bolos",
  "bolts",
  "bolus",
  "bombe",
  "bombs",
  "bonce",
  "bonds",
  "boned",
  "boner",
  "bones",
  "boney",
  "bongo",
  "bongs",
  "bonks",
  "bonne",
  "bonny",
  "bonus",
  "bonze",
  "boobs",
  "booby",
  "booed",
  "boogy",
  "books",
  "booms",
  "boomy",
  "boons",
  "boors",
  "boost",
  "booth",
  "boots",
  "booty",
  "booze",
  "boozy",
  "boppy",
  "boral",
  "boras",
  "borax",
  "bored",
  "borer",
  "bores",
  "boric",
  "borks",
  "borne",
  "boron",
  "borts",
  "borty",
  "bortz",
  "bosks",
  "bosky",
  "bosom",
  "boson",
  "bossy",
  "bosun",
  "botas",
  "botch",
  "botel",
  "bothy",
  "botts",
  "bough",
  "boule",
  "boult",
  "bound",
  "bourg",
  "bourn",
  "bouse",
  "bousy",
  "bouts",
  "bovid",
  "bowed",
  "bowel",
  "bower",
  "bowls",
  "bowse",
  "boxed",
  "boxer",
  "boxes",
  "boxla",
  "boyar",
  "boyla",
  "boyos",
  "bozos",
  "brace",
  "brach",
  "bract",
  "brads",
  "braes",
  "brags",
  "braid",
  "brail",
  "brain",
  "brake",
  "braky",
  "brand",
  "brank",
  "brans",
  "brant",
  "brash",
  "brass",
  "brats",
  "brava",
  "brave",
  "bravi",
  "bravo",
  "brawl",
  "brawn",
  "braws",
  "braxy",
  "brays",
  "braza",
  "braze",
  "bread",
  "break",
  "bream",
  "brede",
  "breed",
  "brees",
  "brens",
  "brent",
  "breve",
  "brews",
  "briar",
  "bribe",
  "brick",
  "bride",
  "brief",
  "brier",
  "bries",
  "brigs",
  "brill",
  "brims",
  "brine",
  "bring",
  "brink",
  "brins",
  "briny",
  "brios",
  "brisk",
  "briss",
  "brith",
  "brits",
  "britt",
  "broad",
  "broch",
  "brock",
  "broil",
  "broke",
  "brome",
  "bromo",
  "bronc",
  "brood",
  "brook",
  "broom",
  "broos",
  "brose",
  "brosy",
  "broth",
  "brown",
  "brows",
  "brugh",
  "bruin",
  "bruit",
  "brume",
  "brung",
  "brunt",
  "brush",
  "brusk",
  "brute",
  "bruts",
  "bubal",
  "bubbe",
  "bubus",
  "bucko",
  "bucks",
  "buddy",
  "budge",
  "buffi",
  "buffo",
  "buffs",
  "buffy",
  "buggy",
  "bugle",
  "buhls",
  "buhrs",
  "build",
  "built",
  "bulbs",
  "bulge",
  "bulgy",
  "bulks",
  "bulky",
  "bulla",
  "bulls",
  "bully",
  "bumfs",
  "bumph",
  "bumps",
  "bumpy",
  "bunas",
  "bunch",
  "bunco",
  "bunds",
  "bundt",
  "bungs",
  "bunko",
  "bunks",
  "bunns",
  "bunny",
  "bunts",
  "bunya",
  "buoys",
  "buppy",
  "buran",
  "buras",
  "burbs",
  "burds",
  "buret",
  "burfi",
  "burgh",
  "burgs",
  "burin",
  "burka",
  "burke",
  "burks",
  "burls",
  "burly",
  "burns",
  "burnt",
  "burps",
  "burqa",
  "burro",
  "burrs",
  "burry",
  "bursa",
  "burse",
  "burst",
  "busby",
  "bused",
  "buses",
  "bushy",
  "busks",
  "busts",
  "busty",
  "butch",
  "buteo",
  "butes",
  "butle",
  "butoh",
  "butte",
  "butts",
  "butty",
  "butut",
  "butyl",
  "buxom",
  "buyer",
  "buzzy",
  "bwana",
  "bylaw",
  "byres",
  "byrls",
  "byssi",
  "bytes",
  "byway",
  "cabal",
  "cabby",
  "caber",
  "cabin",
  "cable",
  "cabob",
  "cacao",
  "cacas",
  "cache",
  "cacti",
  "caddy",
  "cades",
  "cadet",
  "cadge",
  "cadgy",
  "cadis",
  "cadre",
  "caeca",
  "cafes",
  "caffs",
  "caged",
  "cager",
  "cages",
  "cagey",
  "cahow",
  "caids",
  "cains",
  "caird",
  "cairn",
  "cajon",
  "caked",
  "cakes",
  "cakey",
  "calfs",
  "calif",
  "calix",
  "calks",
  "calla",
  "calls",
  "calms",
  "calos",
  "calve",
  "calyx",
  "camas",
  "camel",
  "cameo",
  "cames",
  "camis",
  "camos",
  "campi",
  "campo",
  "camps",
  "campy",
  "canal",
  "candy",
  "caned",
  "caner",
  "canes",
  "canid",
  "canna",
  "canny",
  "canoe",
  "canon",
  "canso",
  "canst",
  "canto",
  "cants",
  "canty",
  "caped",
  "caper",
  "capes",
  "caphs",
  "capiz",
  "capon",
  "capos",
  "capot",
  "capri",
  "caput",
  "carat",
  "carbo",
  "carbs",
  "cards",
  "cared",
  "carer",
  "cares",
  "caret",
  "carex",
  "cargo",
  "carks",
  "carle",
  "carls",
  "carns",
  "carny",
  "carob",
  "carol",
  "carom",
  "carpi",
  "carps",
  "carrs",
  "carry",
  "carse",
  "carte",
  "carts",
  "carve",
  "casas",
  "cased",
  "cases",
  "casks",
  "casky",
  "caste",
  "casts",
  "casus",
  "catch",
  "cater",
  "cates",
  "catty",
  "cauld",
  "caulk",
  "cauls",
  "cauri",
  "cause",
  "cavas",
  "caved",
  "caver",
  "caves",
  "cavie",
  "cavil",
  "cawed",
  "cease",
  "cebid",
  "cecal",
  "cecum",
  "cedar",
  "ceded",
  "ceder",
  "cedes",
  "cedis",
  "ceiba",
  "ceili",
  "ceils",
  "celeb",
  "cella",
  "celli",
  "cello",
  "cells",
  "celom",
  "celts",
  "cense",
  "cento",
  "cents",
  "centu",
  "ceorl",
  "cepes",
  "cerci",
  "cered",
  "ceres",
  "ceria",
  "ceric",
  "ceros",
  "certs",
  "cesta",
  "cesti",
  "cetes",
  "chads",
  "chafe",
  "chaff",
  "chain",
  "chair",
  "chais",
  "chalk",
  "champ",
  "chams",
  "chana",
  "chang",
  "chant",
  "chaos",
  "chape",
  "chaps",
  "chapt",
  "chard",
  "chare",
  "chark",
  "charm",
  "charr",
  "chars",
  "chart",
  "chary",
  "chase",
  "chasm",
  "chats",
  "chaws",
  "chays",
  "cheap",
  "cheat",
  "check",
  "cheek",
  "cheep",
  "cheer",
  "chefs",
  "chela",
  "chemo",
  "chems",
  "chert",
  "chess",
  "chest",
  "cheth",
  "chevy",
  "chews",
  "chewy",
  "chiao",
  "chias",
  "chica",
  "chick",
  "chico",
  "chics",
  "chide",
  "chief",
  "chiel",
  "child",
  "chile",
  "chili",
  "chill",
  "chimb",
  "chime",
  "chimp",
  "china",
  "chine",
  "ching",
  "chink",
  "chino",
  "chins",
  "chips",
  "chirk",
  "chirm",
  "chiro",
  "chirp",
  "chirr",
  "chiru",
  "chits",
  "chive",
  "chivy",
  "chock",
  "chocs",
  "choil",
  "choir",
  "choke",
  "choky",
  "choli",
  "chomp",
  "chook",
  "chops",
  "chord",
  "chore",
  "chose",
  "chott",
  "chows",
  "chubs",
  "chuck",
  "chufa",
  "chuff",
  "chugs",
  "chump",
  "chums",
  "chunk",
  "churl",
  "churn",
  "churr",
  "chuse",
  "chute",
  "chyle",
  "chyme",
  "cibol",
  "cider",
  "cigar",
  "ciggy",
  "cilia",
  "cimex",
  "cinch",
  "cines",
  "cinqs",
  "cions",
  "circa",
  "circs",
  "cires",
  "cirri",
  "cisco",
  "cissy",
  "cists",
  "cited",
  "citer",
  "cites",
  "civet",
  "civic",
  "civie",
  "civil",
  "civvy",
  "clach",
  "clack",
  "clade",
  "clads",
  "clags",
  "claim",
  "clamp",
  "clams",
  "clang",
  "clank",
  "clans",
  "claps",
  "clapt",
  "claro",
  "clary",
  "clash",
  "clasp",
  "class",
  "clast",
  "clave",
  "clavi",
  "claws",
  "clays",
  "clean",
  "clear",
  "cleat",
  "cleek",
  "clefs",
  "cleft",
  "clegs",
  "clepe",
  "clept",
  "clerk",
  "clews",
  "click",
  "cliff",
  "clift",
  "climb",
  "clime",
  "cline",
  "cling",
  "clink",
  "clips",
  "clipt",
  "cloak",
  "clock",
  "clods",
  "clogs",
  "clomb",
  "clomp",
  "clone",
  "clonk",
  "clons",
  "cloot",
  "clops",
  "close",
  "cloth",
  "clots",
  "cloud",
  "clour",
  "clout",
  "clove",
  "clown",
  "cloys",
  "cloze",
  "clubs",
  "cluck",
  "clued",
  "clues",
  "clump",
  "clung",
  "clunk",
  "cnida",
  "coach",
  "coact",
  "coady",
  "coala",
  "coals",
  "coaly",
  "coapt",
  "coast",
  "coati",
  "coats",
  "cobbs",
  "cobby",
  "cobia",
  "coble",
  "cobra",
  "cocas",
  "cocci",
  "cocks",
  "cocky",
  "cocoa",
  "cocos",
  "codas",
  "codec",
  "coded",
  "coden",
  "coder",
  "codes",
  "codex",
  "codon",
  "coeds",
  "coffs",
  "cogon",
  "cohoe",
  "cohog",
  "cohos",
  "coifs",
  "coign",
  "coils",
  "coins",
  "coirs",
  "coked",
  "cokes",
  "colas",
  "colby",
  "colds",
  "coled",
  "coles",
  "colic",
  "colin",
  "colly",
  "colog",
  "colon",
  "color",
  "colts",
  "colza",
  "comae",
  "comal",
  "comas",
  "combe",
  "combi",
  "combo",
  "combs",
  "comer",
  "comes",
  "comet",
  "comfy",
  "comic",
  "comix",
  "comma",
  "commo",
  "comms",
  "commy",
  "compo",
  "comps",
  "compt",
  "comte",
  "conch",
  "condo",
  "coned",
  "cones",
  "coney",
  "conga",
  "conge",
  "congo",
  "conic",
  "conin",
  "conks",
  "conky",
  "conns",
  "conte",
  "conto",
  "conus",
  "cooch",
  "cooed",
  "cooee",
  "cooer",
  "cooey",
  "coofs",
  "cooks",
  "cooky",
  "cools",
  "cooly",
  "coomb",
  "coons",
  "coops",
  "coopt",
  "coots",
  "copal",
  "copay",
  "coped",
  "copen",
  "coper",
  "copes",
  "copra",
  "copse",
  "copsy",
  "coqui",
  "coral",
  "corby",
  "cords",
  "cored",
  "corer",
  "cores",
  "corgi",
  "coria",
  "corks",
  "corky",
  "corms",
  "corns",
  "cornu",
  "corny",
  "corps",
  "corse",
  "cosec",
  "coses",
  "coset",
  "cosey",
  "cosie",
  "costa",
  "costs",
  "cotan",
  "coted",
  "cotes",
  "cotta",
  "couch",
  "coude",
  "cough",
  "could",
  "count",
  "coupe",
  "coups",
  "court",
  "couth",
  "coved",
  "coven",
  "cover",
  "coves",
  "covet",
  "covey",
  "covin",
  "cowed",
  "cower",
  "cowls",
  "cowry",
  "coxae",
  "coxal",
  "coxed",
  "coxes",
  "coyau",
  "coyed",
  "coyer",
  "coyly",
  "coypu",
  "cozen",
  "cozes",
  "cozey",
  "cozie",
  "craal",
  "crabs",
  "crack",
  "craft",
  "crags",
  "crake",
  "cramp",
  "crams",
  "crane",
  "crank",
  "crape",
  "craps",
  "crash",
  "crass",
  "crate",
  "crave",
  "crawl",
  "craws",
  "craze",
  "crazy",
  "creak",
  "cream",
  "credo",
  "creds",
  "creed",
  "creek",
  "creel",
  "creep",
  "creme",
  "crepe",
  "crept",
  "crepy",
  "cress",
  "crest",
  "crews",
  "cribs",
  "crick",
  "cried",
  "crier",
  "cries",
  "crime",
  "crimp",
  "cripe",
  "crisp",
  "crits",
  "croak",
  "croci",
  "crock",
  "crocs",
  "croft",
  "crone",
  "crony",
  "crook",
  "croon",
  "crops",
  "crore",
  "cross",
  "croup",
  "crowd",
  "crown",
  "crows",
  "croze",
  "cruck",
  "crude",
  "crudo",
  "cruds",
  "cruel",
  "cruet",
  "cruft",
  "crumb",
  "crump",
  "crunk",
  "cruor",
  "crura",
  "cruse",
  "crush",
  "crust",
  "crwth",
  "cryer",
  "crypt",
  "cubby",
  "cubeb",
  "cubed",
  "cuber",
  "cubes",
  "cubic",
  "cubit",
  "cuddy",
  "cuffs",
  "cuifs",
  "cuing",
  "cuish",
  "cukes",
  "culch",
  "culet",
  "culex",
  "culls",
  "cully",
  "culms",
  "culpa",
  "culti",
  "cults",
  "cumin",
  "cunit",
  "cupel",
  "cupid",
  "cuppa",
  "cuppy",
  "curbs",
  "curch",
  "curds",
  "curdy",
  "cured",
  "curer",
  "cures",
  "curet",
  "curfs",
  "curia",
  "curie",
  "curio",
  "curls",
  "curly",
  "curns",
  "currs",
  "curry",
  "curse",
  "curst",
  "curve",
  "curvy",
  "cusec",
  "cushy",
  "cusks",
  "cusps",
  "cusso",
  "cutch",
  "cuter",
  "cutes",
  "cutey",
  "cutie",
  "cutin",
  "cutis",
  "cutty",
  "cutup",
  "cuvee",
  "cyano",
  "cyans",
  "cyber",
  "cycad",
  "cycas",
  "cycle",
  "cyclo",
  "cyder",
  "cylix",
  "cymae",
  "cymar",
  "cymas",
  "cymes",
  "cymol",
  "cynic",
  "cysts",
  "cyton",
  "czars",
  "daces",
  "dacha",
  "dadas",
  "daddy",
  "dados",
  "daffs",
  "daffy",
  "dagga",
  "dahls",
  "daily",
  "dairy",
  "daisy",
  "dales",
  "dally",
  "daman",
  "damar",
  "dames",
  "damns",
  "damps",
  "dance",
  "dandy",
  "dangs",
  "danio",
  "darbs",
  "dared",
  "darer",
  "dares",
  "daric",
  "darks",
  "darns",
  "darts",
  "dashi",
  "dashy",
  "dated",
  "dater",
  "dates",
  "datos",
  "datto",
  "datum",
  "daube",
  "daubs",
  "dauby",
  "daunt",
  "dauts",
  "daven",
  "davit",
  "dawed",
  "dawen",
  "dawks",
  "dawns",
  "dawts",
  "dazed",
  "dazes",
  "deads",
  "deair",
  "deals",
  "dealt",
  "deans",
  "dears",
  "deary",
  "deash",
  "death",
  "deave",
  "debag",
  "debar",
  "debit",
  "debts",
  "debug",
  "debur",
  "debut",
  "debye",
  "decaf",
  "decal",
  "decan",
  "decay",
  "decks",
  "decor",
  "decos",
  "decoy",
  "decry",
  "dedal",
  "deeds",
  "deedy",
  "deems",
  "deeps",
  "deers",
  "deets",
  "defat",
  "defer",
  "defis",
  "defog",
  "degas",
  "degum",
  "deice",
  "deify",
  "deign",
  "deils",
  "deism",
  "deist",
  "deity",
  "deked",
  "dekes",
  "dekko",
  "delay",
  "deled",
  "deles",
  "delfs",
  "delft",
  "delis",
  "dells",
  "delly",
  "delta",
  "delts",
  "delve",
  "demes",
  "demic",
  "demit",
  "demob",
  "demoi",
  "demon",
  "demos",
  "demur",
  "denar",
  "denes",
  "denim",
  "dense",
  "dents",
  "deoxy",
  "depot",
  "depth",
  "derat",
  "deray",
  "derby",
  "derma",
  "derms",
  "derry",
  "desex",
  "deshi",
  "desis",
  "desks",
  "deter",
  "detox",
  "deuce",
  "devas",
  "devel",
  "devil",
  "devis",
  "devon",
  "dewan",
  "dewar",
  "dewax",
  "dewed",
  "dexes",
  "dexie",
  "dhaks",
  "dhals",
  "dhikr",
  "dhobi",
  "dhole",
  "dholl",
  "dhoti",
  "dhows",
  "dhuti",
  "dials",
  "diary",
  "diazo",
  "diced",
  "dicer",
  "dices",
  "dicey",
  "dicks",
  "dicky",
  "dicot",
  "dicta",
  "dicty",
  "didie",
  "didos",
  "didst",
  "diene",
  "diets",
  "diffs",
  "dight",
  "digit",
  "diked",
  "diker",
  "dikes",
  "dildo",
  "dills",
  "dilly",
  "dimer",
  "dimes",
  "dimly",
  "dinar",
  "dined",
  "diner",
  "dines",
  "dinge",
  "dingo",
  "dings",
  "dingy",
  "dinks",
  "dinky",
  "dinos",
  "dints",
  "diode",
  "diols",
  "dippy",
  "dipso",
  "diram",
  "direr",
  "dirge",
  "dirks",
  "dirls",
  "dirts",
  "dirty",
  "disci",
  "disco",
  "discs",
  "dishy",
  "disks",
  "disme",
  "ditas",
  "ditch",
  "dites",
  "ditsy",
  "ditto",
  "ditty",
  "ditzy",
  "divan",
  "divas",
  "dived",
  "diver",
  "dives",
  "divot",
  "divvy",
  "diwan",
  "dixit",
  "dizen",
  "dizzy",
  "djinn",
  "djins",
  "doats",
  "dobby",
  "dobes",
  "dobie",
  "dobla",
  "dobra",
  "docks",
  "dodge",
  "dodgy",
  "dodos",
  "doers",
  "doest",
  "doeth",
  "doffs",
  "doges",
  "dogey",
  "doggo",
  "doggy",
  "dogie",
  "dogma",
  "doily",
  "doing",
  "doits",
  "dojos",
  "dolce",
  "dolci",
  "doled",
  "doles",
  "dolls",
  "dolly",
  "dolma",
  "dolor",
  "dolts",
  "domal",
  "domed",
  "domes",
  "domic",
  "donas",
  "donee",
  "donga",
  "dongs",
  "donna",
  "donne",
  "donor",
  "donsy",
  "donut",
  "doobs",
  "doody",
  "dooly",
  "dooms",
  "doomy",
  "doors",
  "doozy",
  "dopas",
  "doped",
  "doper",
  "dopes",
  "dopey",
  "dores",
  "dorks",
  "dorky",
  "dorms",
  "dormy",
  "dorps",
  "dorrs",
  "dorsa",
  "dorty",
  "dosai",
  "dosas",
  "dosed",
  "doser",
  "doses",
  "dosha",
  "dotal",
  "doted",
  "doter",
  "dotes",
  "dotty",
  "doubt",
  "douce",
  "dough",
  "doula",
  "douma",
  "doums",
  "doura",
  "douse",
  "douts",
  "doven",
  "doves",
  "dowdy",
  "dowed",
  "dowel",
  "dower",
  "dowie",
  "downs",
  "downy",
  "dowry",
  "dowse",
  "doxie",
  "doyen",
  "doyly",
  "dozed",
  "dozen",
  "dozer",
  "dozes",
  "drabs",
  "draff",
  "draft",
  "drags",
  "drail",
  "drain",
  "drake",
  "drama",
  "drams",
  "drank",
  "drape",
  "drats",
  "drave",
  "drawl",
  "drawn",
  "draws",
  "drays",
  "dread",
  "dream",
  "drear",
  "dreck",
  "dreed",
  "drees",
  "dregs",
  "dreks",
  "dress",
  "drest",
  "dribs",
  "dried",
  "drier",
  "dries",
  "drift",
  "drill",
  "drily",
  "drink",
  "drips",
  "dript",
  "drive",
  "droid",
  "droit",
  "droke",
  "droll",
  "drone",
  "drool",
  "droop",
  "drops",
  "dropt",
  "dross",
  "drouk",
  "drove",
  "drown",
  "drubs",
  "drugs",
  "druid",
  "drums",
  "drunk",
  "drupe",
  "druse",
  "dryad",
  "dryas",
  "dryer",
  "dryly",
  "duads",
  "duals",
  "ducal",
  "ducat",
  "duces",
  "duchy",
  "ducks",
  "ducky",
  "ducts",
  "duddy",
  "duded",
  "dudes",
  "duels",
  "duets",
  "duffs",
  "dufus",
  "duits",
  "duked",
  "dukes",
  "dulce",
  "dulia",
  "dulls",
  "dully",
  "dulse",
  "dumas",
  "dumbo",
  "dumbs",
  "dumka",
  "dumky",
  "dummy",
  "dumps",
  "dumpy",
  "dunam",
  "dunce",
  "dunch",
  "dunes",
  "dungs",
  "dungy",
  "dunks",
  "dunts",
  "duomi",
  "duomo",
  "duped",
  "duper",
  "dupes",
  "duple",
  "dural",
  "duras",
  "dured",
  "dures",
  "durns",
  "duroc",
  "duros",
  "durra",
  "durrs",
  "durst",
  "durum",
  "dusks",
  "dusky",
  "dusts",
  "dusty",
  "dutch",
  "duvet",
  "dwale",
  "dwarf",
  "dweeb",
  "dwell",
  "dwelt",
  "dwine",
  "dyads",
  "dyers",
  "dying",
  "dyked",
  "dykes",
  "dynel",
  "dynes",
  "eager",
  "eagle",
  "eagre",
  "eared",
  "earls",
  "early",
  "earns",
  "earth",
  "eased",
  "easel",
  "easer",
  "eases",
  "easts",
  "eaten",
  "eater",
  "eaved",
  "eaves",
  "ebbed",
  "ebbet",
  "ebons",
  "ebony",
  "ebook",
  "eched",
  "eches",
  "echos",
  "eclat",
  "ecrus",
  "edema",
  "edged",
  "edger",
  "edges",
  "edict",
  "edify",
  "edile",
  "edits",
  "educe",
  "educt",
  "eejit",
  "eensy",
  "eerie",
  "egads",
  "egers",
  "egest",
  "eggar",
  "egged",
  "egger",
  "egret",
  "eider",
  "eidos",
  "eight",
  "eikon",
  "eject",
  "ejido",
  "eking",
  "ekkas",
  "elain",
  "eland",
  "elans",
  "elate",
  "elbow",
  "elder",
  "elect",
  "elegy",
  "elemi",
  "elfin",
  "elide",
  "elint",
  "elite",
  "eloin",
  "elope",
  "elude",
  "elute",
  "elven",
  "elver",
  "elves",
  "email",
  "embar",
  "embay",
  "embed",
  "ember",
  "embow",
  "emcee",
  "emeer",
  "emend",
  "emerg",
  "emery",
  "emeus",
  "emics",
  "emirs",
  "emits",
  "emmer",
  "emmet",
  "emoji",
  "emote",
  "empty",
  "emyde",
  "emyds",
  "enact",
  "enate",
  "ended",
  "ender",
  "endow",
  "endue",
  "enema",
  "enemy",
  "enjoy",
  "ennui",
  "enoki",
  "enols",
  "enorm",
  "enows",
  "enrol",
  "ensky",
  "ensue",
  "enter",
  "entia",
  "entry",
  "enure",
  "envoi",
  "envoy",
  "enzym",
  "eosin",
  "epact",
  "epees",
  "ephah",
  "ephas",
  "ephod",
  "ephor",
  "epics",
  "epoch",
  "epode",
  "epoxy",
  "equal",
  "eques",
  "equid",
  "equip",
  "erase",
  "erect",
  "ergot",
  "erica",
  "ernes",
  "erode",
  "erose",
  "erred",
  "error",
  "erses",
  "eruct",
  "erugo",
  "erupt",
  "eruvs",
  "ervil",
  "escar",
  "escot",
  "eskar",
  "esker",
  "esnes",
  "essay",
  "esses",
  "ester",
  "estop",
  "etape",
  "ether",
  "ethic",
  "ethos",
  "ethyl",
  "etics",
  "etnas",
  "etude",
  "etuis",
  "etwee",
  "etyma",
  "euros",
  "evade",
  "evens",
  "event",
  "evert",
  "every",
  "evict",
  "evils",
  "evite",
  "evoke",
  "ewers",
  "exact",
  "exalt",
  "exams",
  "excel",
  "execs",
  "exert",
  "exile",
  "exine",
  "exing",
  "exist",
  "exits",
  "exome",
  "exons",
  "expat",
  "expel",
  "expos",
  "extol",
  "extra",
  "exude",
  "exult",
  "exurb",
  "eyass",
  "eyers",
  "eying",
  "eyras",
  "eyres",
  "eyrie",
  "eyrir",
  "fable",
  "faced",
  "facer",
  "faces",
  "facet",
  "facia",
  "facta",
  "facts",
  "faddy",
  "faded",
  "fader",
  "fades",
  "fadge",
  "fados",
  "faena",
  "faery",
  "faffs",
  "fagin",
  "fagot",
  "fails",
  "faint",
  "fairs",
  "fairy",
  "faith",
  "faked",
  "faker",
  "fakes",
  "fakey",
  "fakie",
  "fakir",
  "falls",
  "false",
  "famed",
  "fames",
  "fancy",
  "fanes",
  "fanga",
  "fangs",
  "fanny",
  "fanon",
  "fanos",
  "fanum",
  "faqir",
  "farad",
  "farce",
  "farci",
  "farcy",
  "fards",
  "fared",
  "farer",
  "fares",
  "farle",
  "farls",
  "farms",
  "faros",
  "farro",
  "farts",
  "fasts",
  "fatal",
  "fated",
  "fates",
  "fatly",
  "fatty",
  "fatwa",
  "faugh",
  "fauld",
  "fault",
  "fauna",
  "fauns",
  "fauve",
  "favas",
  "faves",
  "favor",
  "favus",
  "fawns",
  "fawny",
  "faxed",
  "faxes",
  "fayed",
  "fazed",
  "fazes",
  "fears",
  "fease",
  "feast",
  "feats",
  "feaze",
  "fecal",
  "feces",
  "fecks",
  "fedex",
  "feebs",
  "feeds",
  "feels",
  "feeze",
  "feign",
  "feint",
  "feist",
  "felid",
  "fella",
  "fells",
  "felly",
  "felon",
  "felts",
  "felty",
  "femes",
  "femme",
  "femur",
  "fence",
  "fends",
  "fenny",
  "feods",
  "feoff",
  "feral",
  "feres",
  "feria",
  "ferly",
  "fermi",
  "ferns",
  "ferny",
  "ferry",
  "fesse",
  "festa",
  "fests",
  "fetal",
  "fetas",
  "fetch",
  "feted",
  "fetes",
  "fetid",
  "fetor",
  "fetus",
  "feuar",
  "feuds",
  "feued",
  "fever",
  "fewer",
  "feyer",
  "feyly",
  "fezes",
  "fezzy",
  "fiars",
  "fiats",
  "fiber",
  "fibre",
  "fices",
  "fiche",
  "fichu",
  "ficin",
  "ficus",
  "fidge",
  "fidos",
  "fiefs",
  "field",
  "fiend",
  "fiery",
  "fifed",
  "fifer",
  "fifes",
  "fifth",
  "fifty",
  "fight",
  "filar",
  "filch",
  "filed",
  "filer",
  "files",
  "filet",
  "filks",
  "fille",
  "fillo",
  "fills",
  "filly",
  "filmi",
  "films",
  "filmy",
  "filos",
  "filth",
  "filum",
  "final",
  "finca",
  "finch",
  "finds",
  "fined",
  "finer",
  "fines",
  "finis",
  "finks",
  "finny",
  "finos",
  "fiord",
  "fique",
  "fired",
  "firer",
  "fires",
  "firms",
  "firns",
  "firry",
  "first",
  "firth",
  "fiscs",
  "fishy",
  "fists",
  "fitch",
  "fitly",
  "fiver",
  "fives",
  "fixed",
  "fixer",
  "fixes",
  "fixit",
  "fizzy",
  "fjeld",
  "fjord",
  "flabs",
  "flack",
  "flags",
  "flail",
  "flair",
  "flake",
  "flaky",
  "flame",
  "flams",
  "flamy",
  "flank",
  "flans",
  "flaps",
  "flare",
  "flash",
  "flask",
  "flats",
  "flava",
  "flaws",
  "flawy",
  "flaxy",
  "flays",
  "fleam",
  "fleas",
  "fleck",
  "fleer",
  "flees",
  "fleet",
  "flesh",
  "flews",
  "fleys",
  "flick",
  "flics",
  "flied",
  "flier",
  "flies",
  "fling",
  "flint",
  "flips",
  "flirs",
  "flirt",
  "flite",
  "flits",
  "float",
  "flock",
  "flocs",
  "floes",
  "flogs",
  "flong",
  "flood",
  "floor",
  "flops",
  "flora",
  "floss",
  "flota",
  "flour",
  "flout",
  "flown",
  "flows",
  "flubs",
  "flued",
  "flues",
  "fluff",
  "fluid",
  "fluke",
  "fluky",
  "flume",
  "flump",
  "flung",
  "flunk",
  "fluor",
  "flush",
  "flute",
  "fluty",
  "fluyt",
  "flyby",
  "flyer",
  "flyte",
  "foals",
  "foams",
  "foamy",
  "focal",
  "focus",
  "foehn",
  "fogey",
  "foggy",
  "fogie",
  "fohns",
  "foils",
  "foins",
  "foist",
  "folds",
  "foley",
  "folia",
  "folic",
  "folio",
  "folks",
  "folky",
  "folly",
  "fonds",
  "fondu",
  "fonts",
  "foods",
  "fools",
  "foots",
  "footy",
  "foram",
  "foray",
  "forbs",
  "forby",
  "force",
  "fordo",
  "fords",
  "fores",
  "forex",
  "forge",
  "forgo",
  "forks",
  "forky",
  "forme",
  "forms",
  "forte",
  "forth",
  "forts",
  "forty",
  "forum",
  "fossa",
  "fosse",
  "fouls",
  "found",
  "fount",
  "fours",
  "fovea",
  "fowls",
  "foxed",
  "foxes",
  "foyer",
  "frack",
  "frags",
  "frail",
  "frame",
  "franc",
  "frank",
  "fraps",
  "frass",
  "frats",
  "fraud",
  "frays",
  "freak",
  "freed",
  "freer",
  "frees",
  "fremd",
  "frena",
  "frere",
  "fresh",
  "frets",
  "friar",
  "fried",
  "frier",
  "fries",
  "frigs",
  "frill",
  "frise",
  "frisk",
  "frith",
  "frits",
  "fritt",
  "fritz",
  "frizz",
  "frock",
  "froes",
  "frogs",
  "frond",
  "frons",
  "front",
  "frore",
  "frosh",
  "frost",
  "froth",
  "frown",
  "frows",
  "froze",
  "frugs",
  "fruit",
  "frump",
  "fryer",
  "fubsy",
  "fucus",
  "fuddy",
  "fudge",
  "fudgy",
  "fuels",
  "fugal",
  "fuggy",
  "fugio",
  "fugle",
  "fugue",
  "fugus",
  "fujis",
  "fulls",
  "fully",
  "fumed",
  "fumer",
  "fumes",
  "fumet",
  "fundi",
  "funds",
  "fungi",
  "fungo",
  "funks",
  "funky",
  "funny",
  "furan",
  "furls",
  "furor",
  "furry",
  "furze",
  "furzy",
  "fused",
  "fusee",
  "fusel",
  "fuses",
  "fusil",
  "fussy",
  "fusty",
  "futon",
  "fuzed",
  "fuzee",
  "fuzes",
  "fuzil",
  "fuzzy",
  "fyces",
  "fykes",
  "fytte",
  "gabba",
  "gabby",
  "gable",
  "gaddi",
  "gadid",
  "gadis",
  "gaffe",
  "gaffs",
  "gaged",
  "gager",
  "gages",
  "gaily",
  "gains",
  "gaits",
  "galah",
  "galas",
  "galax",
  "galea",
  "galed",
  "gales",
  "galls",
  "gally",
  "galop",
  "gamas",
  "gamay",
  "gamba",
  "gambe",
  "gambs",
  "gamed",
  "gamer",
  "games",
  "gamey",
  "gamic",
  "gamin",
  "gamma",
  "gammy",
  "gamps",
  "gamut",
  "ganef",
  "ganev",
  "gangs",
  "ganja",
  "ganof",
  "gaols",
  "gaped",
  "gaper",
  "gapes",
  "gappy",
  "garbs",
  "garda",
  "garni",
  "garth",
  "gases",
  "gasps",
  "gassy",
  "gasts",
  "gatch",
  "gated",
  "gater",
  "gates",
  "gator",
  "gauch",
  "gauds",
  "gaudy",
  "gauge",
  "gault",
  "gaums",
  "gaunt",
  "gaurs",
  "gauss",
  "gauze",
  "gauzy",
  "gavel",
  "gavot",
  "gawks",
  "gawky",
  "gawps",
  "gawsy",
  "gayal",
  "gayer",
  "gayly",
  "gazar",
  "gazed",
  "gazer",
  "gazes",
  "gears",
  "gecko",
  "gecks",
  "geeks",
  "geeky",
  "geese",
  "geest",
  "gelds",
  "gelee",
  "gelid",
  "gelly",
  "gelts",
  "gemma",
  "gemmy",
  "gemot",
  "genes",
  "genet",
  "genic",
  "genie",
  "genii",
  "genip",
  "genoa",
  "genom",
  "genre",
  "genro",
  "gents",
  "genua",
  "genus",
  "geode",
  "geoid",
  "gerah",
  "germs",
  "germy",
  "gesso",
  "geste",
  "gests",
  "getas",
  "getup",
  "geums",
  "ghast",
  "ghats",
  "ghaut",
  "ghazi",
  "ghees",
  "ghost",
  "ghoul",
  "ghyll",
  "giant",
  "gibed",
  "giber",
  "gibes",
  "giddy",
  "gifts",
  "gigas",
  "gighe",
  "gigot",
  "gigue",
  "gilds",
  "gills",
  "gilly",
  "gilts",
  "gimel",
  "gimme",
  "gimps",
  "gimpy",
  "ginch",
  "ginks",
  "ginny",
  "gipon",
  "gipsy",
  "girds",
  "girls",
  "girly",
  "girns",
  "giron",
  "giros",
  "girsh",
  "girth",
  "girts",
  "gismo",
  "gists",
  "gitch",
  "gites",
  "given",
  "giver",
  "gives",
  "gizmo",
  "glace",
  "glade",
  "glads",
  "glady",
  "glair",
  "glams",
  "gland",
  "glans",
  "glare",
  "glary",
  "glass",
  "glaze",
  "glazy",
  "gleam",
  "glean",
  "gleba",
  "glebe",
  "glede",
  "gleds",
  "gleed",
  "gleek",
  "glees",
  "gleet",
  "glens",
  "gleys",
  "glial",
  "glias",
  "glide",
  "gliff",
  "glime",
  "glims",
  "glint",
  "glitz",
  "gloam",
  "gloat",
  "globe",
  "globs",
  "glogg",
  "gloms",
  "gloom",
  "gloop",
  "glops",
  "glory",
  "gloss",
  "glost",
  "glout",
  "glove",
  "glows",
  "gloze",
  "glued",
  "gluer",
  "glues",
  "gluey",
  "glugs",
  "glume",
  "glums",
  "gluon",
  "glute",
  "gluts",
  "glyph",
  "gnarl",
  "gnarr",
  "gnars",
  "gnash",
  "gnats",
  "gnawn",
  "gnaws",
  "gnome",
  "goads",
  "goals",
  "goats",
  "goaty",
  "goban",
  "gobos",
  "godet",
  "godly",
  "goers",
  "goest",
  "goeth",
  "gofer",
  "gogos",
  "going",
  "gojis",
  "golds",
  "golem",
  "golfs",
  "golly",
  "gombo",
  "gomer",
  "gonad",
  "gonch",
  "gonef",
  "goner",
  "gongs",
  "gonia",
  "gonif",
  "gonof",
  "gonzo",
  "goods",
  "goody",
  "gooey",
  "goofs",
  "goofy",
  "gooks",
  "gooky",
  "goons",
  "goony",
  "goops",
  "goopy",
  "goose",
  "goosy",
  "gopik",
  "goral",
  "gored",
  "gores",
  "gorge",
  "gorms",
  "gorps",
  "gorse",
  "gorsy",
  "gotch",
  "goths",
  "gouge",
  "gourd",
  "gouts",
  "gouty",
  "gowan",
  "gowds",
  "gowks",
  "gowns",
  "goxes",
  "graal",
  "grabs",
  "grace",
  "grade",
  "grads",
  "graft",
  "grail",
  "grain",
  "grama",
  "gramp",
  "grams",
  "grana",
  "grand",
  "grans",
  "grant",
  "grape",
  "graph",
  "grapy",
  "grasp",
  "grass",
  "grate",
  "grave",
  "gravy",
  "grays",
  "graze",
  "great",
  "grebe",
  "greed",
  "greek",
  "green",
  "grees",
  "greet",
  "grego",
  "greys",
  "gride",
  "grids",
  "grief",
  "griff",
  "grift",
  "grigs",
  "grill",
  "grime",
  "grimy",
  "grind",
  "grins",
  "griot",
  "gripe",
  "grips",
  "gript",
  "gripy",
  "grist",
  "grith",
  "grits",
  "groan",
  "groat",
  "grody",
  "grogs",
  "groin",
  "groks",
  "groom",
  "grope",
  "gross",
  "grosz",
  "grots",
  "group",
  "grout",
  "grove",
  "grovy",
  "growl",
  "grown",
  "grows",
  "grrrl",
  "grubs",
  "gruel",
  "grues",
  "gruff",
  "grume",
  "grump",
  "grunt",
  "guaco",
  "guano",
  "guans",
  "guard",
  "guars",
  "guava",
  "gucks",
  "gudes",
  "guess",
  "guest",
  "guffs",
  "guide",
  "guids",
  "guild",
  "guile",
  "guilt",
  "guiro",
  "guise",
  "gulag",
  "gular",
  "gulch",
  "gules",
  "gulfs",
  "gulfy",
  "gulls",
  "gully",
  "gulps",
  "gulpy",
  "gumbo",
  "gumma",
  "gummi",
  "gummy",
  "gunge",
  "gungy",
  "gunks",
  "gunky",
  "gunny",
  "guppy",
  "gurdy",
  "gurge",
  "gurry",
  "gursh",
  "gurus",
  "gushy",
  "gussy",
  "gusto",
  "gusts",
  "gusty",
  "gutsy",
  "gutta",
  "gutty",
  "guyed",
  "guyot",
  "gwine",
  "gybed",
  "gybes",
  "gynie",
  "gynos",
  "gyoza",
  "gypos",
  "gyppo",
  "gypsy",
  "gyral",
  "gyred",
  "gyres",
  "gyron",
  "gyros",
  "gyrus",
  "gyved",
  "gyves",
  "haafs",
  "haars",
  "habit",
  "habus",
  "hacek",
  "hacks",
  "hadal",
  "haded",
  "hades",
  "hadji",
  "hadst",
  "haems",
  "haets",
  "hafiz",
  "hafts",
  "hahas",
  "haick",
  "haika",
  "haiks",
  "haiku",
  "hails",
  "haint",
  "hairs",
  "hairy",
  "hajes",
  "hajis",
  "hajji",
  "hakes",
  "hakim",
  "hakus",
  "halal",
  "haled",
  "haler",
  "hales",
  "halid",
  "hallo",
  "halls",
  "halma",
  "halms",
  "halon",
  "halos",
  "halts",
  "halva",
  "halve",
  "halwa",
  "hamal",
  "hames",
  "hammy",
  "hamza",
  "hance",
  "hands",
  "handy",
  "hangs",
  "hanks",
  "hanky",
  "hansa",
  "hanse",
  "hants",
  "hapax",
  "haply",
  "happi",
  "happy",
  "haram",
  "hards",
  "hardy",
  "hared",
  "harem",
  "hares",
  "harks",
  "harls",
  "harms",
  "harps",
  "harpy",
  "harry",
  "harsh",
  "harts",
  "hasps",
  "haste",
  "hasty",
  "hatch",
  "hated",
  "hater",
  "hates",
  "haugh",
  "haulm",
  "hauls",
  "haunt",
  "haute",
  "haven",
  "haver",
  "haves",
  "havoc",
  "hawed",
  "hawks",
  "hawse",
  "hayed",
  "hayer",
  "hayey",
  "hazan",
  "hazed",
  "hazel",
  "hazer",
  "hazes",
  "heads",
  "heady",
  "heals",
  "heaps",
  "heapy",
  "heard",
  "hears",
  "heart",
  "heath",
  "heats",
  "heave",
  "heavy",
  "hecks",
  "heder",
  "hedge",
  "hedgy",
  "heeds",
  "heels",
  "heeze",
  "hefts",
  "hefty",
  "heigh",
  "heils",
  "heirs",
  "heist",
  "helio",
  "helix",
  "hello",
  "hells",
  "helms",
  "helos",
  "helot",
  "helps",
  "helve",
  "hemal",
  "hemes",
  "hemic",
  "hemin",
  "hemps",
  "hempy",
  "hence",
  "henge",
  "henna",
  "henry",
  "hents",
  "herbs",
  "herby",
  "herds",
  "heres",
  "herls",
  "herma",
  "herms",
  "herns",
  "heron",
  "heros",
  "herry",
  "hertz",
  "hests",
  "heths",
  "heuch",
  "heugh",
  "hevea",
  "hewed",
  "hewer",
  "hexad",
  "hexed",
  "hexer",
  "hexes",
  "hexyl",
  "hicks",
  "hided",
  "hider",
  "hides",
  "highs",
  "hight",
  "hijab",
  "hijra",
  "hiked",
  "hiker",
  "hikes",
  "hilar",
  "hillo",
  "hills",
  "hilly",
  "hilts",
  "hilum",
  "hilus",
  "himbo",
  "hinds",
  "hinge",
  "hinky",
  "hinny",
  "hints",
  "hiply",
  "hippo",
  "hippy",
  "hired",
  "hiree",
  "hirer",
  "hires",
  "hissy",
  "hists",
  "hitch",
  "hived",
  "hives",
  "hoagy",
  "hoard",
  "hoars",
  "hoary",
  "hobby",
  "hobos",
  "hocks",
  "hocus",
  "hodad",
  "hoers",
  "hogan",
  "hoggs",
  "hoick",
  "hoise",
  "hoist",
  "hoked",
  "hokes",
  "hokey",
  "hokku",
  "hokum",
  "holds",
  "holed",
  "holes",
  "holey",
  "holks",
  "holla",
  "hollo",
  "holly",
  "holme",
  "holms",
  "holos",
  "holts",
  "homas",
  "homed",
  "homer",
  "homes",
  "homey",
  "homie",
  "homos",
  "honan",
  "honda",
  "honed",
  "honer",
  "hones",
  "honey",
  "hongi",
  "hongs",
  "honks",
  "honor",
  "hooch",
  "hoods",
  "hoody",
  "hooey",
  "hoofs",
  "hooka",
  "hooks",
  "hooky",
  "hooly",
  "hoops",
  "hoots",
  "hooty",
  "hopak",
  "hoped",
  "hoper",
  "hopes",
  "hoppy",
  "horah",
  "horal",
  "horas",
  "horde",
  "horks",
  "horns",
  "horny",
  "horse",
  "horst",
  "horsy",
  "hosed",
  "hosel",
  "hosen",
  "hoser",
  "hoses",
  "hosey",
  "hosta",
  "hosts",
  "hotch",
  "hotel",
  "hotly",
  "hotty",
  "hound",
  "houri",
  "hours",
  "house",
  "hovel",
  "hover",
  "howdy",
  "howes",
  "howff",
  "howfs",
  "howks",
  "howls",
  "hoyas",
  "hoyle",
  "hubby",
  "hucks",
  "huffs",
  "huffy",
  "huger",
  "huggy",
  "hulas",
  "hulks",
  "hulky",
  "hullo",
  "hulls",
  "human",
  "humic",
  "humid",
  "humor",
  "humph",
  "humps",
  "humpy",
  "humus",
  "hunch",
  "hunks",
  "hunky",
  "hunts",
  "hurds",
  "hurls",
  "hurly",
  "hurry",
  "hurst",
  "hurts",
  "husks",
  "husky",
  "hussy",
  "hutch",
  "huzza",
  "hwyls",
  "hydra",
  "hydro",
  "hyena",
  "hying",
  "hylas",
  "hymen",
  "hymns",
  "hyoid",
  "hyped",
  "hyper",
  "hypes",
  "hypha",
  "hypos",
  "hyrax",
  "hyson",
  "iambi",
  "iambs",
  "ichor",
  "icier",
  "icily",
  "icing",
  "icker",
  "icons",
  "ictic",
  "ictus",
  "ideal",
  "ideas",
  "ident",
  "idiom",
  "idiot",
  "idled",
  "idler",
  "idles",
  "idols",
  "idyll",
  "idyls",
  "igged",
  "igloo",
  "iglus",
  "ihram",
  "ikats",
  "ikons",
  "ileac",
  "ileal",
  "ileum",
  "ileus",
  "iliac",
  "iliad",
  "ilial",
  "ilium",
  "iller",
  "image",
  "imago",
  "imams",
  "imaum",
  "imbed",
  "imbue",
  "imide",
  "imido",
  "imids",
  "imine",
  "imino",
  "immix",
  "imped",
  "impel",
  "impis",
  "imply",
  "impro",
  "inane",
  "inapt",
  "inarm",
  "inbox",
  "inbye",
  "incog",
  "incur",
  "incus",
  "index",
  "indie",
  "indol",
  "indow",
  "indri",
  "indue",
  "inept",
  "inert",
  "infer",
  "infix",
  "infos",
  "infra",
  "ingle",
  "ingot",
  "inion",
  "inked",
  "inker",
  "inkle",
  "inlay",
  "inlet",
  "inned",
  "inner",
  "input",
  "inrun",
  "inset",
  "inter",
  "intis",
  "intro",
  "inure",
  "inurn",
  "invar",
  "iodic",
  "iodid",
  "iodin",
  "ionic",
  "iotas",
  "irade",
  "irate",
  "irids",
  "iring",
  "irked",
  "iroko",
  "irone",
  "irons",
  "irony",
  "isbas",
  "isled",
  "isles",
  "islet",
  "issei",
  "issue",
  "istle",
  "itchy",
  "items",
  "ither",
  "ivied",
  "ivies",
  "ivory",
  "ixias",
  "ixnay",
  "ixora",
  "ixtle",
  "izard",
  "izars",
  "jabot",
  "jacal",
  "jacks",
  "jacky",
  "jaded",
  "jades",
  "jager",
  "jaggs",
  "jaggy",
  "jagra",
  "jails",
  "jakes",
  "jalap",
  "jalop",
  "jambe",
  "jambs",
  "jammy",
  "janes",
  "janny",
  "janty",
  "japan",
  "japed",
  "japer",
  "japes",
  "jarls",
  "jatos",
  "jauks",
  "jaunt",
  "jaups",
  "javas",
  "jawan",
  "jawed",
  "jazzy",
  "jeans",
  "jebel",
  "jeeps",
  "jeers",
  "jeeze",
  "jefes",
  "jehad",
  "jehus",
  "jells",
  "jelly",
  "jemmy",
  "jenny",
  "jerid",
  "jerks",
  "jerky",
  "jerry",
  "jesse",
  "jests",
  "jetes",
  "jeton",
  "jetty",
  "jewel",
  "jibba",
  "jibbs",
  "jibed",
  "jiber",
  "jibes",
  "jiffs",
  "jiffy",
  "jiggy",
  "jihad",
  "jills",
  "jilts",
  "jimmy",
  "jimpy",
  "jingo",
  "jinks",
  "jinni",
  "jinns",
  "jirds",
  "jived",
  "jiver",
  "jives",
  "jivey",
  "jnana",
  "jocko",
  "jocks",
  "jocky",
  "joeys",
  "johns",
  "joins",
  "joint",
  "joist",
  "joked",
  "joker",
  "jokes",
  "jokey",
  "joles",
  "jolly",
  "jolts",
  "jolty",
  "jomon",
  "jones",
  "jooks",
  "joram",
  "jorum",
  "jotas",
  "jotty",
  "joual",
  "jouks",
  "joule",
  "joust",
  "jowar",
  "jowed",
  "jowls",
  "jowly",
  "joyed",
  "jubas",
  "jubes",
  "jucos",
  "judas",
  "judge",
  "judgy",
  "judos",
  "jugal",
  "jugum",
  "juice",
  "juicy",
  "jujus",
  "juked",
  "jukes",
  "jukus",
  "julep",
  "jumar",
  "jumbo",
  "jumps",
  "jumpy",
  "junco",
  "junks",
  "junky",
  "junta",
  "junto",
  "jupes",
  "jupon",
  "jural",
  "jurat",
  "jurel",
  "juror",
  "justs",
  "jutes",
  "jutty",
  "juvie",
  "kabab",
  "kabar",
  "kabob",
  "kadis",
  "kafir",
  "kagus",
  "kaiak",
  "kaifs",
  "kails",
  "kains",
  "kakas",
  "kakis",
  "kalam",
  "kales",
  "kalif",
  "kalpa",
  "kames",
  "kamik",
  "kanas",
  "kanes",
  "kanji",
  "kanzu",
  "kaons",
  "kapas",
  "kaphs",
  "kapok",
  "kapow",
  "kappa",
  "kapus",
  "kaput",
  "karat",
  "karma",
  "karns",
  "karoo",
  "karri",
  "karst",
  "karts",
  "kasha",
  "katas",
  "kauri",
  "kaury",
  "kavas",
  "kayak",
  "kayos",
  "kazoo",
  "kbars",
  "kebab",
  "kebar",
  "kebob",
  "kecks",
  "kedge",
  "keefs",
  "keeks",
  "keels",
  "keens",
  "keeps",
  "keets",
  "keeve",
  "kefir",
  "keirs",
  "kelep",
  "kelim",
  "kelly",
  "kelps",
  "kelpy",
  "kelts",
  "kemps",
  "kempt",
  "kempy",
  "kenaf",
  "kench",
  "kendo",
  "kenos",
  "kente",
  "kepis",
  "kerbs",
  "kerfs",
  "kerne",
  "kerns",
  "kerry",
  "ketas",
  "ketch",
  "ketol",
  "kevel",
  "kevil",
  "kexes",
  "keyed",
  "keyer",
  "khadi",
  "khafs",
  "khaki",
  "khans",
  "khaph",
  "khats",
  "kheda",
  "kheth",
  "khets",
  "khoum",
  "kiack",
  "kiang",
  "kibbe",
  "kibbi",
  "kibei",
  "kibes",
  "kibla",
  "kicks",
  "kicky",
  "kiddo",
  "kiddy",
  "kiefs",
  "kiers",
  "kilim",
  "kills",
  "kilns",
  "kilos",
  "kilts",
  "kilty",
  "kinas",
  "kinds",
  "kines",
  "kings",
  "kinin",
  "kinks",
  "kinky",
  "kinos",
  "kiosk",
  "kippa",
  "kirks",
  "kirns",
  "kissy",
  "kists",
  "kited",
  "kiter",
  "kites",
  "kithe",
  "kiths",
  "kitty",
  "kivas",
  "kiwis",
  "klick",
  "klieg",
  "kliks",
  "klong",
  "kloof",
  "kluge",
  "klutz",
  "knack",
  "knaps",
  "knars",
  "knaur",
  "knave",
  "knawe",
  "knead",
  "kneed",
  "kneel",
  "knees",
  "knell",
  "knelt",
  "knife",
  "knish",
  "knits",
  "knobs",
  "knock",
  "knoll",
  "knops",
  "knosp",
  "knots",
  "knout",
  "known",
  "knows",
  "knurl",
  "knurr",
  "knurs",
  "koala",
  "koans",
  "kobos",
  "koels",
  "kofta",
  "kohls",
  "koine",
  "kojis",
  "kokam",
  "kokum",
  "kolas",
  "kolos",
  "kombu",
  "konks",
  "kooks",
  "kooky",
  "kopek",
  "kophs",
  "kopje",
  "koppa",
  "korai",
  "koras",
  "korat",
  "korma",
  "korun",
  "kotos",
  "kotow",
  "kraal",
  "kraft",
  "krais",
  "krait",
  "kraut",
  "krays",
  "kreep",
  "krewe",
  "krill",
  "krona",
  "krone",
  "kroon",
  "krubi",
  "kubie",
  "kudos",
  "kudus",
  "kudzu",
  "kufis",
  "kugel",
  "kukri",
  "kulak",
  "kulfi",
  "kumis",
  "kumys",
  "kurta",
  "kurus",
  "kusso",
  "kvass",
  "kvell",
  "kyack",
  "kyaks",
  "kyars",
  "kyats",
  "kylin",
  "kylix",
  "kyrie",
  "kytes",
  "kythe",
  "laari",
  "label",
  "labia",
  "labor",
  "labra",
  "laced",
  "lacer",
  "laces",
  "lacey",
  "lacks",
  "laddy",
  "laded",
  "laden",
  "lader",
  "lades",
  "ladle",
  "laevo",
  "lagan",
  "lager",
  "lahal",
  "lahar",
  "laich",
  "laics",
  "laigh",
  "laird",
  "lairs",
  "lairy",
  "laith",
  "laity",
  "laked",
  "laker",
  "lakes",
  "lakhs",
  "lalls",
  "lamas",
  "lambs",
  "lamby",
  "lamed",
  "lamer",
  "lames",
  "lamia",
  "lamps",
  "lanai",
  "lance",
  "lanch",
  "lands",
  "lanes",
  "lanky",
  "lapel",
  "lapin",
  "lapis",
  "lapse",
  "larch",
  "lards",
  "lardy",
  "laree",
  "lares",
  "large",
  "largo",
  "laris",
  "larks",
  "larky",
  "larns",
  "larnt",
  "larum",
  "larva",
  "lased",
  "laser",
  "lases",
  "lassi",
  "lasso",
  "lassy",
  "lasts",
  "latch",
  "lated",
  "laten",
  "later",
  "latex",
  "lathe",
  "lathi",
  "laths",
  "lathy",
  "latke",
  "latte",
  "lauan",
  "lauds",
  "laugh",
  "laura",
  "lavas",
  "laved",
  "laver",
  "laves",
  "lawed",
  "lawns",
  "lawny",
  "laxer",
  "laxes",
  "laxly",
  "layed",
  "layer",
  "layin",
  "layup",
  "lazar",
  "lazed",
  "lazes",
  "leach",
  "leads",
  "leady",
  "leafs",
  "leafy",
  "leaks",
  "leaky",
  "leans",
  "leant",
  "leaps",
  "leapt",
  "learn",
  "lears",
  "leary",
  "lease",
  "leash",
  "least",
  "leave",
  "leavy",
  "leben",
  "ledes",
  "ledge",
  "ledgy",
  "leech",
  "leeks",
  "leers",
  "leery",
  "leets",
  "lefts",
  "lefty",
  "legal",
  "leger",
  "leges",
  "leggy",
  "legit",
  "lehrs",
  "lehua",
  "leman",
  "lemma",
  "lemon",
  "lemur",
  "lends",
  "lenes",
  "lenis",
  "lenos",
  "lense",
  "lento",
  "leone",
  "leper",
  "lepta",
  "letch",
  "lethe",
  "letup",
  "leuds",
  "levas",
  "levee",
  "level",
  "lever",
  "levin",
  "lewis",
  "lexes",
  "lexis",
  "liana",
  "liane",
  "liang",
  "liard",
  "liars",
  "libel",
  "liber",
  "libra",
  "libri",
  "lichi",
  "licht",
  "licit",
  "licks",
  "lidar",
  "lidos",
  "liege",
  "liens",
  "liers",
  "lieus",
  "lieve",
  "lifer",
  "lifts",
  "ligan",
  "liger",
  "light",
  "liked",
  "liken",
  "liker",
  "likes",
  "lilac",
  "lilts",
  "liman",
  "limas",
  "limba",
  "limbi",
  "limbo",
  "limbs",
  "limby",
  "limed",
  "limen",
  "limes",
  "limey",
  "limit",
  "limns",
  "limos",
  "limpa",
  "limps",
  "linac",
  "lindy",
  "lined",
  "linen",
  "liner",
  "lines",
  "liney",
  "linga",
  "lingo",
  "lings",
  "lingy",
  "linin",
  "links",
  "linky",
  "linns",
  "linny",
  "linos",
  "lints",
  "linty",
  "linum",
  "lions",
  "lipas",
  "lipid",
  "lipin",
  "lipos",
  "lippy",
  "liras",
  "lirot",
  "lisle",
  "lisps",
  "lists",
  "litai",
  "litas",
  "liter",
  "lites",
  "lithe",
  "litho",
  "litre",
  "lived",
  "liven",
  "liver",
  "lives",
  "livid",
  "livre",
  "llama",
  "llano",
  "loach",
  "loads",
  "loafs",
  "loams",
  "loamy",
  "loans",
  "loath",
  "lobar",
  "lobby",
  "lobed",
  "lobes",
  "lobos",
  "local",
  "loche",
  "lochs",
  "locie",
  "locis",
  "locks",
  "locos",
  "locum",
  "locus",
  "loden",
  "lodes",
  "lodge",
  "loess",
  "lofts",
  "lofty",
  "logan",
  "loges",
  "loggy",
  "logia",
  "logic",
  "login",
  "logoi",
  "logon",
  "logos",
  "loids",
  "loins",
  "lolls",
  "lolly",
  "loner",
  "longe",
  "longs",
  "looby",
  "looed",
  "looey",
  "loofa",
  "loofs",
  "looie",
  "looks",
  "looky",
  "looms",
  "loons",
  "loony",
  "loops",
  "loopy",
  "loose",
  "loots",
  "loped",
  "loper",
  "lopes",
  "loppy",
  "loral",
  "loran",
  "lords",
  "lores",
  "loris",
  "lorry",
  "losel",
  "loser",
  "loses",
  "lossy",
  "lotah",
  "lotas",
  "lotic",
  "lotos",
  "lotte",
  "lotto",
  "lotus",
  "lough",
  "louie",
  "louis",
  "louma",
  "loupe",
  "loups",
  "lours",
  "loury",
  "louse",
  "lousy",
  "louts",
  "lovat",
  "loved",
  "lover",
  "loves",
  "lovey",
  "lowed",
  "lower",
  "lowes",
  "lowly",
  "lowse",
  "loxed",
  "loxes",
  "loyal",
  "luaus",
  "lubed",
  "lubes",
  "luces",
  "lucid",
  "lucks",
  "lucky",
  "lucre",
  "ludes",
  "ludic",
  "ludos",
  "luffa",
  "luffs",
  "luged",
  "luger",
  "luges",
  "lulls",
  "lulus",
  "lumas",
  "lumen",
  "lumps",
  "lumpy",
  "lunar",
  "lunas",
  "lunch",
  "lunes",
  "lunet",
  "lunge",
  "lungi",
  "lungs",
  "lunks",
  "lunts",
  "lupin",
  "lupus",
  "lurch",
  "lured",
  "lurer",
  "lures",
  "lurid",
  "lurks",
  "lusts",
  "lusty",
  "lusus",
  "lutea",
  "luted",
  "lutes",
  "luvvy",
  "luxer",
  "luxes",
  "lweis",
  "lyard",
  "lyart",
  "lyase",
  "lycea",
  "lycee",
  "lying",
  "lymph",
  "lynch",
  "lyres",
  "lyric",
  "lysed",
  "lyses",
  "lysin",
  "lysis",
  "lyssa",
  "lytic",
  "lytta",
  "maars",
  "mabes",
  "macaw",
  "maced",
  "macer",
  "maces",
  "mache",
  "macho",
  "machs",
  "macks",
  "macle",
  "macon",
  "macro",
  "madam",
  "madly",
  "madre",
  "mafia",
  "mafic",
  "mages",
  "magic",
  "magma",
  "magot",
  "magus",
  "mahoe",
  "mahua",
  "mahwa",
  "maids",
  "maile",
  "maill",
  "mails",
  "maims",
  "mains",
  "mairs",
  "maist",
  "maize",
  "major",
  "makar",
  "maker",
  "makes",
  "makis",
  "makos",
  "malar",
  "males",
  "malic",
  "malls",
  "malms",
  "malmy",
  "malts",
  "malty",
  "mamas",
  "mamba",
  "mambo",
  "mamee",
  "mamey",
  "mamie",
  "mamma",
  "mammy",
  "manas",
  "manat",
  "maneb",
  "maned",
  "manes",
  "manga",
  "mange",
  "mango",
  "mangy",
  "mania",
  "manic",
  "manky",
  "manly",
  "manna",
  "manor",
  "manos",
  "manse",
  "manta",
  "manus",
  "maple",
  "maqui",
  "maras",
  "march",
  "marcs",
  "mares",
  "marge",
  "maria",
  "marka",
  "marks",
  "marls",
  "marly",
  "marry",
  "marse",
  "marsh",
  "marts",
  "marvy",
  "masas",
  "maser",
  "mashy",
  "masks",
  "mason",
  "massa",
  "masse",
  "massy",
  "masts",
  "match",
  "mated",
  "mater",
  "mates",
  "matey",
  "maths",
  "matin",
  "matte",
  "matts",
  "matza",
  "matzo",
  "mauds",
  "mauls",
  "maund",
  "mausy",
  "mauts",
  "mauve",
  "mauzy",
  "maven",
  "mavie",
  "mavin",
  "mavis",
  "mawed",
  "maxed",
  "maxes",
  "maxim",
  "maxis",
  "mayan",
  "mayas",
  "maybe",
  "mayed",
  "mayor",
  "mayos",
  "mayst",
  "mazed",
  "mazer",
  "mazes",
  "mbira",
  "meads",
  "meals",
  "mealy",
  "means",
  "meant",
  "meany",
  "meats",
  "meaty",
  "mecca",
  "mechs",
  "medal",
  "media",
  "medic",
  "medii",
  "meeds",
  "meets",
  "meiny",
  "melds",
  "melee",
  "melic",
  "mells",
  "melon",
  "melts",
  "melty",
  "memes",
  "memos",
  "menad",
  "mends",
  "mensa",
  "mense",
  "mensh",
  "menta",
  "mento",
  "menus",
  "meous",
  "meows",
  "merch",
  "mercs",
  "mercy",
  "merer",
  "meres",
  "merge",
  "merit",
  "merks",
  "merle",
  "merls",
  "merry",
  "mesas",
  "meshy",
  "mesic",
  "mesne",
  "meson",
  "messy",
  "metal",
  "meted",
  "meter",
  "metes",
  "meths",
  "metis",
  "metol",
  "metre",
  "metro",
  "mewed",
  "mewls",
  "mezes",
  "mezzo",
  "miaou",
  "miaow",
  "miasm",
  "miaul",
  "micas",
  "miche",
  "micky",
  "micra",
  "micro",
  "middy",
  "midge",
  "midis",
  "midst",
  "miens",
  "miffs",
  "miffy",
  "miggs",
  "might",
  "miked",
  "mikes",
  "mikra",
  "mikva",
  "milch",
  "milds",
  "miler",
  "miles",
  "milia",
  "milks",
  "milky",
  "mille",
  "mills",
  "milos",
  "milpa",
  "milts",
  "milty",
  "mimed",
  "mimeo",
  "mimer",
  "mimes",
  "mimic",
  "minae",
  "minas",
  "mince",
  "mincy",
  "minds",
  "mined",
  "miner",
  "mines",
  "mingy",
  "minim",
  "minis",
  "minke",
  "minks",
  "minny",
  "minor",
  "mints",
  "minty",
  "minus",
  "mired",
  "mires",
  "mirex",
  "mirid",
  "mirin",
  "mirks",
  "mirky",
  "mirth",
  "mirza",
  "misdo",
  "miser",
  "mises",
  "misos",
  "missy",
  "mists",
  "misty",
  "miter",
  "mites",
  "mitis",
  "mitre",
  "mitts",
  "mixed",
  "mixer",
  "mixes",
  "mixup",
  "mizen",
  "moans",
  "moats",
  "mocha",
  "mochi",
  "mocks",
  "modal",
  "model",
  "modem",
  "modes",
  "modus",
  "moggy",
  "mogul",
  "mohel",
  "mohos",
  "mohur",
  "moils",
  "moira",
  "moire",
  "moist",
  "mojos",
  "mokes",
  "molal",
  "molar",
  "molas",
  "molds",
  "moldy",
  "moles",
  "molls",
  "molly",
  "molto",
  "molts",
  "molys",
  "momes",
  "momma",
  "mommy",
  "momus",
  "monad",
  "monas",
  "monde",
  "mondo",
  "money",
  "mongo",
  "monic",
  "monie",
  "monks",
  "monos",
  "monte",
  "month",
  "monty",
  "mooch",
  "moods",
  "moody",
  "mooed",
  "mooks",
  "moola",
  "mools",
  "moons",
  "moony",
  "moors",
  "moory",
  "moose",
  "moots",
  "moped",
  "moper",
  "mopes",
  "mopey",
  "moppy",
  "morae",
  "moral",
  "moras",
  "moray",
  "morel",
  "mores",
  "morns",
  "moron",
  "morph",
  "morro",
  "morse",
  "morts",
  "mosey",
  "mosks",
  "mosso",
  "mossy",
  "moste",
  "mosts",
  "motel",
  "motes",
  "motet",
  "motey",
  "moths",
  "mothy",
  "motif",
  "motor",
  "motte",
  "motto",
  "motts",
  "mouch",
  "moues",
  "mould",
  "moult",
  "mound",
  "mount",
  "mourn",
  "mouse",
  "mousy",
  "mouth",
  "moved",
  "mover",
  "moves",
  "movie",
  "mowed",
  "mower",
  "moxas",
  "moxie",
  "mozos",
  "mucho",
  "mucid",
  "mucin",
  "mucks",
  "mucky",
  "mucor",
  "mucro",
  "mucus",
  "muddy",
  "mudra",
  "muffs",
  "mufti",
  "muggs",
  "muggy",
  "muhly",
  "mujik",
  "mulch",
  "mulct",
  "muled",
  "mules",
  "muley",
  "mulie",
  "mulla",
  "mulls",
  "mumms",
  "mummy",
  "mumps",
  "mumsy",
  "mumus",
  "munch",
  "mungo",
  "mungs",
  "munis",
  "muons",
  "mural",
  "muras",
  "mured",
  "mures",
  "murex",
  "murid",
  "murks",
  "murky",
  "murra",
  "murre",
  "murrs",
  "murry",
  "musca",
  "mused",
  "muser",
  "muses",
  "mushy",
  "music",
  "musks",
  "musky",
  "musos",
  "mussy",
  "musth",
  "musts",
  "musty",
  "mutch",
  "muted",
  "muter",
  "mutes",
  "muton",
  "mutts",
  "muxed",
  "muxes",
  "muzak",
  "muzzy",
  "mynah",
  "mynas",
  "myoid",
  "myoma",
  "myope",
  "myopy",
  "myrrh",
  "mysid",
  "myths",
  "mythy",
  "naans",
  "nabes",
  "nabis",
  "nabob",
  "nacho",
  "nacre",
  "nadas",
  "nadir",
  "naevi",
  "naffs",
  "nagas",
  "naggy",
  "naiad",
  "naifs",
  "nails",
  "naira",
  "nairu",
  "naive",
  "naked",
  "nakfa",
  "nalas",
  "naled",
  "named",
  "namer",
  "names",
  "nanas",
  "nanna",
  "nanny",
  "nanos",
  "napas",
  "napes",
  "nappa",
  "nappe",
  "nappy",
  "narco",
  "narcs",
  "nards",
  "nares",
  "naric",
  "naris",
  "narks",
  "narky",
  "nasal",
  "nasty",
  "natal",
  "natch",
  "nates",
  "natty",
  "naval",
  "navar",
  "navel",
  "naves",
  "navvy",
  "nawab",
  "nazis",
  "neaps",
  "nears",
  "neath",
  "neats",
  "necks",
  "neddy",
  "needs",
  "needy",
  "neems",
  "neeps",
  "negus",
  "neifs",
  "neigh",
  "neist",
  "nelly",
  "nemas",
  "nenes",
  "neons",
  "nerds",
  "nerdy",
  "nerol",
  "nerts",
  "nertz",
  "nerve",
  "nervy",
  "nests",
  "netop",
  "netts",
  "netty",
  "neuks",
  "neume",
  "neums",
  "never",
  "neves",
  "nevus",
  "newbs",
  "newel",
  "newer",
  "newie",
  "newly",
  "newsy",
  "newts",
  "nexts",
  "nexus",
  "ngwee",
  "nicad",
  "nicer",
  "niche",
  "nicks",
  "nicol",
  "nidal",
  "nided",
  "nides",
  "nidus",
  "niece",
  "nieve",
  "niffs",
  "niffy",
  "nifty",
  "nighs",
  "night",
  "nihil",
  "nikah",
  "nills",
  "nimbi",
  "niner",
  "nines",
  "ninja",
  "ninny",
  "ninon",
  "ninth",
  "nipas",
  "nippy",
  "niqab",
  "nisei",
  "nisus",
  "niter",
  "nites",
  "nitid",
  "niton",
  "nitre",
  "nitro",
  "nitty",
  "nival",
  "nixed",
  "nixes",
  "nixie",
  "nizam",
  "nobby",
  "noble",
  "nobly",
  "nocks",
  "nodal",
  "noddy",
  "nodes",
  "nodus",
  "noels",
  "noggs",
  "nohow",
  "noils",
  "noily",
  "noirs",
  "noise",
  "noisy",
  "nolos",
  "nomad",
  "nomas",
  "nomen",
  "nomes",
  "nomoi",
  "nomos",
  "nonas",
  "nonce",
  "nones",
  "nonet",
  "nonis",
  "nonyl",
  "nooks",
  "noons",
  "noose",
  "nopal",
  "noria",
  "noris",
  "norms",
  "north",
  "nosed",
  "noses",
  "nosey",
  "notal",
  "notch",
  "noted",
  "noter",
  "notes",
  "notum",
  "nouns",
  "novae",
  "novas",
  "novel",
  "noway",
  "nowts",
  "noyau",
  "nubby",
  "nubia",
  "nucha",
  "nuder",
  "nudes",
  "nudge",
  "nudie",
  "nudzh",
  "nuffs",
  "nuked",
  "nukes",
  "nulls",
  "numbs",
  "numen",
  "nummy",
  "nurds",
  "nurls",
  "nurse",
  "nutso",
  "nutsy",
  "nutty",
  "nyala",
  "nylon",
  "nymph",
  "oaked",
  "oaken",
  "oakum",
  "oared",
  "oases",
  "oasis",
  "oasts",
  "oaten",
  "oater",
  "oaths",
  "oaves",
  "obeah",
  "obeli",
  "obese",
  "obeys",
  "obias",
  "obits",
  "objet",
  "oboes",
  "obole",
  "oboli",
  "obols",
  "occur",
  "ocean",
  "ocher",
  "oches",
  "ochre",
  "ochry",
  "ocker",
  "ocrea",
  "octad",
  "octal",
  "octan",
  "octet",
  "octyl",
  "oculi",
  "odahs",
  "odder",
  "oddly",
  "odeon",
  "odeum",
  "odist",
  "odium",
  "odors",
  "odour",
  "odyle",
  "odyls",
  "offal",
  "offed",
  "offer",
  "often",
  "ofter",
  "ogams",
  "ogeed",
  "ogees",
  "ogham",
  "ogive",
  "ogled",
  "ogler",
  "ogles",
  "ogres",
  "ohias",
  "ohing",
  "ohmic",
  "oidia",
  "oiled",
  "oiler",
  "oinks",
  "okapi",
  "okays",
  "okehs",
  "okras",
  "olden",
  "older",
  "oldie",
  "oleic",
  "olein",
  "oleos",
  "oleum",
  "olios",
  "olive",
  "ollas",
  "ollie",
  "ology",
  "omasa",
  "omber",
  "ombre",
  "omega",
  "omens",
  "omers",
  "omits",
  "oncet",
  "onery",
  "onion",
  "onium",
  "onlay",
  "onset",
  "ontic",
  "oohed",
  "oomph",
  "oorie",
  "ootid",
  "oozed",
  "oozes",
  "opahs",
  "opals",
  "opens",
  "opera",
  "opine",
  "oping",
  "opium",
  "opsin",
  "opted",
  "optic",
  "orach",
  "oracy",
  "orals",
  "orang",
  "orate",
  "orbed",
  "orbit",
  "orcas",
  "orcin",
  "order",
  "ordos",
  "oread",
  "organ",
  "orgic",
  "oribi",
  "oriel",
  "orles",
  "orlop",
  "ormer",
  "ornis",
  "orpin",
  "orris",
  "ortho",
  "orzos",
  "oscar",
  "osier",
  "osmic",
  "osmol",
  "ossia",
  "ostia",
  "otaku",
  "other",
  "ottar",
  "otter",
  "ottos",
  "ought",
  "ounce",
  "ouphe",
  "ouphs",
  "ourie",
  "ousel",
  "ousts",
  "outby",
  "outdo",
  "outed",
  "outer",
  "outgo",
  "outre",
  "outro",
  "ouzel",
  "ouzos",
  "ovals",
  "ovary",
  "ovate",
  "ovens",
  "overs",
  "overt",
  "ovine",
  "ovoid",
  "ovoli",
  "ovolo",
  "ovule",
  "owies",
  "owing",
  "owlet",
  "owned",
  "owner",
  "owsen",
  "oxbow",
  "oxers",
  "oxeye",
  "oxide",
  "oxids",
  "oxime",
  "oxims",
  "oxlip",
  "oxter",
  "oyers",
  "ozone",
  "paans",
  "pacas",
  "paced",
  "pacer",
  "paces",
  "pacey",
  "pacha",
  "packs",
  "pacts",
  "paddy",
  "padis",
  "padle",
  "padre",
  "padri",
  "paean",
  "paeon",
  "pagan",
  "paged",
  "pager",
  "pages",
  "pagod",
  "paiks",
  "pails",
  "pains",
  "paint",
  "pairs",
  "paisa",
  "paise",
  "palea",
  "paled",
  "paler",
  "pales",
  "palet",
  "palis",
  "palls",
  "pally",
  "palms",
  "palmy",
  "palpi",
  "palps",
  "palsa",
  "palsy",
  "pampa",
  "panda",
  "pandy",
  "paned",
  "panel",
  "panes",
  "panga",
  "pangs",
  "panic",
  "panne",
  "pansy",
  "panto",
  "pants",
  "panty",
  "papal",
  "papas",
  "papaw",
  "paper",
  "pappi",
  "pappy",
  "parae",
  "paras",
  "parch",
  "pardi",
  "pards",
  "pardy",
  "pared",
  "paren",
  "pareo",
  "parer",
  "pares",
  "pareu",
  "parge",
  "pargo",
  "paris",
  "parka",
  "parks",
  "parky",
  "parle",
  "parol",
  "parrs",
  "parry",
  "parse",
  "parts",
  "party",
  "parve",
  "parvo",
  "paseo",
  "pases",
  "pasha",
  "pashm",
  "paska",
  "passe",
  "pasta",
  "paste",
  "pasts",
  "pasty",
  "patch",
  "pated",
  "paten",
  "pater",
  "pates",
  "paths",
  "patin",
  "patio",
  "patly",
  "patsy",
  "patty",
  "pauas",
  "pause",
  "pavan",
  "paved",
  "paver",
  "paves",
  "pavid",
  "pavin",
  "pavis",
  "pawed",
  "pawer",
  "pawky",
  "pawls",
  "pawns",
  "paxes",
  "payed",
  "payee",
  "payer",
  "payor",
  "peace",
  "peach",
  "peage",
  "peags",
  "peaks",
  "peaky",
  "peals",
  "peans",
  "pearl",
  "pears",
  "peart",
  "pease",
  "peats",
  "peaty",
  "peavy",
  "pecan",
  "pechs",
  "pecks",
  "pecky",
  "pedal",
  "pedes",
  "pedro",
  "peeks",
  "peels",
  "peens",
  "peeps",
  "peers",
  "peery",
  "peeve",
  "peins",
  "peise",
  "pekan",
  "pekes",
  "pekin",
  "pekoe",
  "pelau",
  "peles",
  "pelfs",
  "pelon",
  "pelts",
  "penal",
  "pence",
  "pends",
  "penes",
  "pengo",
  "penis",
  "penna",
  "penne",
  "penni",
  "penny",
  "peons",
  "peony",
  "pepla",
  "pepos",
  "peppy",
  "perch",
  "percs",
  "perdu",
  "perdy",
  "perea",
  "peres",
  "peril",
  "peris",
  "perks",
  "perky",
  "perms",
  "perps",
  "perry",
  "perse",
  "pervo",
  "pervs",
  "pervy",
  "pesky",
  "pesos",
  "pesto",
  "pests",
  "pesty",
  "petal",
  "peter",
  "petit",
  "petti",
  "petto",
  "petty",
  "pewee",
  "pewit",
  "phage",
  "phase",
  "phial",
  "phish",
  "phizz",
  "phlox",
  "phone",
  "phono",
  "phons",
  "phony",
  "photo",
  "phots",
  "phpht",
  "phuts",
  "phyla",
  "phyle",
  "piani",
  "piano",
  "pians",
  "pibal",
  "pical",
  "picas",
  "picks",
  "picky",
  "picot",
  "picul",
  "piece",
  "piers",
  "pieta",
  "piety",
  "piezo",
  "piggy",
  "pigmy",
  "piing",
  "pikas",
  "piked",
  "piker",
  "pikes",
  "pikis",
  "pilaf",
  "pilar",
  "pilau",
  "pilaw",
  "pilea",
  "piled",
  "pilei",
  "piles",
  "pilis",
  "pills",
  "pilot",
  "pilus",
  "pimas",
  "pimps",
  "pinas",
  "pinch",
  "pined",
  "pines",
  "piney",
  "pingo",
  "pings",
  "pinko",
  "pinks",
  "pinky",
  "pinna",
  "pinny",
  "pinon",
  "pinot",
  "pinta",
  "pinto",
  "pints",
  "pinup",
  "pions",
  "pious",
  "pipal",
  "pipas",
  "piped",
  "piper",
  "pipes",
  "pipet",
  "pipit",
  "pique",
  "pirns",
  "pirog",
  "pisco",
  "pisos",
  "piste",
  "pitas",
  "pitch",
  "piths",
  "pithy",
  "piton",
  "pitot",
  "pitta",
  "pivot",
  "pixel",
  "pixes",
  "pixie",
  "pizza",
  "place",
  "plack",
  "plage",
  "plaid",
  "plain",
  "plait",
  "plane",
  "plank",
  "plans",
  "plant",
  "plash",
  "plasm",
  "plate",
  "plats",
  "platy",
  "playa",
  "plays",
  "plaza",
  "plead",
  "pleas",
  "pleat",
  "plebe",
  "plebs",
  "plena",
  "pleon",
  "plews",
  "plica",
  "plied",
  "plier",
  "plies",
  "plink",
  "plods",
  "plonk",
  "plops",
  "plots",
  "plotz",
  "plows",
  "ploye",
  "ploys",
  "pluck",
  "plugs",
  "plumb",
  "plume",
  "plump",
  "plums",
  "plumy",
  "plunk",
  "pluot",
  "plush",
  "plyer",
  "poach",
  "poboy",
  "pocks",
  "pocky",
  "podgy",
  "podia",
  "poems",
  "poesy",
  "poets",
  "pogey",
  "pogos",
  "poilu",
  "poind",
  "point",
  "poise",
  "poked",
  "poker",
  "pokes",
  "pokey",
  "polar",
  "poled",
  "poler",
  "poles",
  "polio",
  "polis",
  "polka",
  "polls",
  "polos",
  "polyp",
  "polys",
  "pombe",
  "pomes",
  "pomos",
  "pomps",
  "ponce",
  "ponds",
  "pones",
  "pongo",
  "pongs",
  "pongy",
  "ponzu",
  "pooch",
  "poods",
  "pooed",
  "poohs",
  "pooja",
  "pooka",
  "pools",
  "poons",
  "poops",
  "poopy",
  "poori",
  "popes",
  "poppa",
  "poppy",
  "popsy",
  "porch",
  "pored",
  "pores",
  "porgy",
  "porin",
  "porks",
  "porky",
  "porno",
  "porns",
  "porny",
  "ports",
  "posed",
  "poser",
  "poses",
  "posey",
  "posit",
  "posse",
  "posts",
  "potsy",
  "potto",
  "potty",
  "pouch",
  "pouff",
  "poufs",
  "poult",
  "pound",
  "pours",
  "pouts",
  "pouty",
  "power",
  "poxed",
  "poxes",
  "poyou",
  "praam",
  "prahu",
  "prams",
  "prana",
  "prang",
  "prank",
  "praos",
  "prase",
  "prate",
  "prats",
  "praus",
  "prawn",
  "prays",
  "preed",
  "preen",
  "prees",
  "preop",
  "preps",
  "presa",
  "prese",
  "press",
  "prest",
  "prexy",
  "preys",
  "price",
  "prick",
  "pricy",
  "pride",
  "pried",
  "prier",
  "pries",
  "prigs",
  "prill",
  "prima",
  "prime",
  "primi",
  "primo",
  "primp",
  "prims",
  "prink",
  "print",
  "prion",
  "prior",
  "prise",
  "prism",
  "priss",
  "privy",
  "prize",
  "proas",
  "probe",
  "probs",
  "prods",
  "proem",
  "profs",
  "progs",
  "prole",
  "promo",
  "proms",
  "prone",
  "prong",
  "proof",
  "props",
  "prose",
  "proso",
  "pross",
  "prost",
  "prosy",
  "proud",
  "prove",
  "prowl",
  "prows",
  "proxy",
  "prude",
  "prune",
  "pruta",
  "pryer",
  "psalm",
  "pseud",
  "pshaw",
  "psoae",
  "psoai",
  "psoas",
  "psych",
  "pubes",
  "pubic",
  "pubis",
  "puces",
  "pucka",
  "pucks",
  "pudge",
  "pudgy",
  "pudic",
  "pudus",
  "puffs",
  "puffy",
  "puggy",
  "pujah",
  "pujas",
  "puked",
  "pukes",
  "pukey",
  "pukka",
  "pulao",
  "pulas",
  "puled",
  "puler",
  "pules",
  "pulik",
  "pulis",
  "pulka",
  "pulks",
  "pulls",
  "pulps",
  "pulpy",
  "pulse",
  "pumas",
  "pumps",
  "punas",
  "punch",
  "pungs",
  "punji",
  "punka",
  "punks",
  "punky",
  "punny",
  "punto",
  "punts",
  "punty",
  "pupae",
  "pupal",
  "pupas",
  "pupil",
  "puppy",
  "pupus",
  "purda",
  "puree",
  "purer",
  "purge",
  "purin",
  "puris",
  "purls",
  "purrs",
  "purse",
  "pursy",
  "purty",
  "puses",
  "pushy",
  "pussy",
  "puton",
  "putti",
  "putto",
  "putts",
  "putty",
  "pygmy",
  "pyins",
  "pylon",
  "pyoid",
  "pyran",
  "pyres",
  "pyric",
  "pyros",
  "pyxes",
  "pyxie",
  "pyxis",
  "pzazz",
  "qadis",
  "qaids",
  "qajaq",
  "qanat",
  "qapik",
  "qibla",
  "qophs",
  "quack",
  "quads",
  "quaff",
  "quags",
  "quail",
  "quais",
  "quake",
  "quaky",
  "quale",
  "qualm",
  "quant",
  "quare",
  "quark",
  "quart",
  "quash",
  "quasi",
  "quass",
  "quate",
  "quays",
  "qubit",
  "quean",
  "queen",
  "queer",
  "quell",
  "quern",
  "query",
  "quest",
  "queue",
  "queys",
  "quick",
  "quids",
  "quiet",
  "quiff",
  "quill",
  "quilt",
  "quins",
  "quint",
  "quips",
  "quipu",
  "quire",
  "quirk",
  "quirt",
  "quite",
  "quits",
  "quods",
  "quoin",
  "quoit",
  "quoll",
  "quota",
  "quote",
  "quoth",
  "qursh",
  "rabat",
  "rabbi",
  "rabic",
  "rabid",
  "raced",
  "racer",
  "races",
  "racks",
  "racon",
  "radar",
  "radii",
  "radio",
  "radix",
  "radon",
  "raffs",
  "rafts",
  "ragas",
  "raged",
  "ragee",
  "rager",
  "rages",
  "ragga",
  "raggs",
  "raggy",
  "ragis",
  "raias",
  "raids",
  "rails",
  "rains",
  "rainy",
  "raise",
  "raita",
  "rajah",
  "rajas",
  "rajes",
  "raked",
  "rakee",
  "raker",
  "rakes",
  "rakis",
  "rakus",
  "rales",
  "rally",
  "ralph",
  "ramal",
  "ramee",
  "ramen",
  "ramet",
  "ramie",
  "ramin",
  "rammy",
  "ramps",
  "ramus",
  "rance",
  "ranch",
  "rands",
  "randy",
  "ranee",
  "range",
  "rangs",
  "rangy",
  "ranid",
  "ranis",
  "ranks",
  "rants",
  "raped",
  "raper",
  "rapes",
  "raphe",
  "rapid",
  "rared",
  "rarer",
  "rares",
  "rased",
  "raser",
  "rases",
  "rasps",
  "raspy",
  "ratal",
  "ratan",
  "ratch",
  "rated",
  "ratel",
  "rater",
  "rates",
  "rathe",
  "ratio",
  "ratos",
  "ratty",
  "raved",
  "ravel",
  "raven",
  "raver",
  "raves",
  "ravey",
  "ravin",
  "rawer",
  "rawin",
  "rawly",
  "raxed",
  "raxes",
  "rayah",
  "rayas",
  "rayed",
  "rayon",
  "razed",
  "razee",
  "razer",
  "razes",
  "razor",
  "reach",
  "react",
  "readd",
  "reads",
  "ready",
  "reais",
  "realm",
  "reals",
  "reams",
  "reaps",
  "rearm",
  "rears",
  "reata",
  "reave",
  "rebar",
  "rebbe",
  "rebec",
  "rebel",
  "rebid",
  "rebop",
  "rebus",
  "rebut",
  "rebuy",
  "recap",
  "recce",
  "recit",
  "recks",
  "recon",
  "recta",
  "recti",
  "recto",
  "recur",
  "recut",
  "redan",
  "redds",
  "reddy",
  "reded",
  "redes",
  "redia",
  "redid",
  "redip",
  "redly",
  "redon",
  "redos",
  "redox",
  "redry",
  "redub",
  "redux",
  "redye",
  "reeds",
  "reedy",
  "reefs",
  "reefy",
  "reeks",
  "reeky",
  "reels",
  "reest",
  "reeve",
  "refed",
  "refel",
  "refer",
  "refit",
  "refix",
  "refly",
  "refry",
  "regal",
  "reges",
  "regie",
  "regma",
  "regna",
  "rehab",
  "rehem",
  "reifs",
  "reify",
  "reign",
  "reiki",
  "reink",
  "reins",
  "reive",
  "rejig",
  "rekey",
  "relax",
  "relay",
  "relet",
  "relic",
  "relit",
  "reman",
  "remap",
  "remet",
  "remex",
  "remit",
  "remix",
  "renal",
  "rends",
  "renew",
  "renig",
  "renin",
  "renos",
  "rente",
  "rents",
  "reoil",
  "reorg",
  "repay",
  "repeg",
  "repel",
  "repin",
  "reply",
  "repos",
  "repot",
  "repps",
  "repro",
  "reran",
  "rerig",
  "rerun",
  "resat",
  "resaw",
  "resay",
  "resee",
  "reses",
  "reset",
  "resew",
  "resid",
  "resin",
  "resit",
  "resod",
  "resow",
  "rests",
  "retag",
  "retax",
  "retch",
  "retem",
  "retia",
  "retie",
  "retro",
  "retry",
  "reuse",
  "revel",
  "revet",
  "revue",
  "rewan",
  "rewax",
  "rewed",
  "rewet",
  "rewin",
  "rewon",
  "rexes",
  "rezes",
  "rheas",
  "rheme",
  "rheum",
  "rhino",
  "rhomb",
  "rhumb",
  "rhyme",
  "rhyta",
  "rials",
  "riant",
  "riata",
  "ribby",
  "ribes",
  "riced",
  "ricer",
  "rices",
  "ricin",
  "ricks",
  "rider",
  "rides",
  "ridge",
  "ridgy",
  "riels",
  "rifer",
  "riffs",
  "rifle",
  "rifts",
  "right",
  "rigid",
  "rigor",
  "riled",
  "riles",
  "riley",
  "rille",
  "rills",
  "rimed",
  "rimer",
  "rimes",
  "rinds",
  "rindy",
  "rings",
  "rinks",
  "rinse",
  "rioja",
  "riots",
  "riped",
  "ripen",
  "riper",
  "ripes",
  "risen",
  "riser",
  "rises",
  "rishi",
  "risks",
  "risky",
  "risus",
  "rites",
  "ritzy",
  "rival",
  "rived",
  "riven",
  "river",
  "rives",
  "rivet",
  "riyal",
  "roach",
  "roads",
  "roams",
  "roans",
  "roars",
  "roast",
  "robed",
  "robes",
  "robin",
  "roble",
  "robot",
  "rocks",
  "rocky",
  "rodeo",
  "rodes",
  "roger",
  "rogue",
  "roils",
  "roily",
  "roles",
  "rolfs",
  "rolls",
  "roman",
  "romeo",
  "romps",
  "ronde",
  "rondo",
  "ronin",
  "roods",
  "roofs",
  "rooks",
  "rooky",
  "rooms",
  "roomy",
  "roose",
  "roost",
  "roots",
  "rooty",
  "roped",
  "roper",
  "ropes",
  "ropey",
  "roque",
  "rosed",
  "roses",
  "roset",
  "roshi",
  "rosin",
  "rosti",
  "rotas",
  "rotch",
  "rotes",
  "rotis",
  "rotls",
  "rotor",
  "rotos",
  "rotte",
  "rouen",
  "roues",
  "rouge",
  "rough",
  "round",
  "roups",
  "roupy",
  "rouse",
  "roust",
  "route",
  "routh",
  "routs",
  "roved",
  "roven",
  "rover",
  "roves",
  "rowan",
  "rowdy",
  "rowed",
  "rowel",
  "rowen",
  "rower",
  "rowth",
  "royal",
  "ruana",
  "rubby",
  "rubel",
  "rubes",
  "ruble",
  "rubli",
  "rubus",
  "ruche",
  "rucks",
  "rudds",
  "ruddy",
  "ruder",
  "ruers",
  "ruffe",
  "ruffs",
  "rugae",
  "rugal",
  "rugby",
  "ruing",
  "ruins",
  "rukhs",
  "ruled",
  "ruler",
  "rules",
  "rumba",
  "rumen",
  "rumly",
  "rummy",
  "rumor",
  "rumps",
  "runes",
  "rungs",
  "runic",
  "runny",
  "runts",
  "runty",
  "rupee",
  "rural",
  "ruses",
  "rushy",
  "rusks",
  "rusts",
  "rusty",
  "ruths",
  "rutin",
  "rutty",
  "ryked",
  "rykes",
  "rynds",
  "ryots",
  "sabal",
  "sabed",
  "saber",
  "sabes",
  "sabin",
  "sabir",
  "sable",
  "sabot",
  "sabra",
  "sabre",
  "sacks",
  "sacra",
  "sades",
  "sadhe",
  "sadhu",
  "sadis",
  "sadly",
  "safer",
  "safes",
  "sagas",
  "sager",
  "sages",
  "saggy",
  "sagos",
  "sagum",
  "sahib",
  "saice",
  "saids",
  "saiga",
  "sails",
  "sains",
  "saint",
  "saith",
  "sajou",
  "saker",
  "sakes",
  "sakis",
  "sakti",
  "salad",
  "salal",
  "salat",
  "salep",
  "sales",
  "salic",
  "sally",
  "salmi",
  "salol",
  "salon",
  "salpa",
  "salps",
  "salsa",
  "salts",
  "salty",
  "salut",
  "salve",
  "salvo",
  "samba",
  "sambo",
  "samek",
  "samey",
  "samfu",
  "samps",
  "sands",
  "sandy",
  "saned",
  "saner",
  "sanes",
  "sanga",
  "sangh",
  "santo",
  "sapid",
  "sapor",
  "sappy",
  "saran",
  "sards",
  "saree",
  "sarge",
  "sargo",
  "sarin",
  "saris",
  "sarks",
  "sarky",
  "sarod",
  "saros",
  "sasin",
  "sassy",
  "satay",
  "sated",
  "satem",
  "sates",
  "satin",
  "satis",
  "satyr",
  "sauce",
  "sauch",
  "saucy",
  "saugh",
  "sauls",
  "sault",
  "sauna",
  "saury",
  "saute",
  "saved",
  "saver",
  "saves",
  "savin",
  "savor",
  "savoy",
  "savvy",
  "sawed",
  "sawer",
  "saxes",
  "sayed",
  "sayer",
  "sayid",
  "sayst",
  "scabs",
  "scads",
  "scags",
  "scald",
  "scale",
  "scall",
  "scalp",
  "scaly",
  "scamp",
  "scams",
  "scans",
  "scant",
  "scape",
  "scare",
  "scarf",
  "scarp",
  "scars",
  "scart",
  "scary",
  "scats",
  "scatt",
  "scaup",
  "scaur",
  "scena",
  "scend",
  "scene",
  "scent",
  "schav",
  "schmo",
  "schul",
  "schwa",
  "scion",
  "scoff",
  "scold",
  "scone",
  "scoop",
  "scoot",
  "scopa",
  "scope",
  "scops",
  "score",
  "scorn",
  "scots",
  "scour",
  "scout",
  "scowl",
  "scows",
  "scrag",
  "scram",
  "scran",
  "scrap",
  "scree",
  "screw",
  "scrim",
  "scrip",
  "scrob",
  "scrod",
  "scrub",
  "scrum",
  "scuba",
  "scudi",
  "scudo",
  "scuds",
  "scuff",
  "sculk",
  "scull",
  "sculp",
  "scums",
  "scups",
  "scurf",
  "scuta",
  "scute",
  "scuts",
  "scuzz",
  "seals",
  "seams",
  "seamy",
  "sears",
  "seats",
  "sebum",
  "secco",
  "sects",
  "sedan",
  "seder",
  "sedge",
  "sedgy",
  "sedum",
  "seeds",
  "seedy",
  "seeks",
  "seels",
  "seely",
  "seems",
  "seeps",
  "seepy",
  "seers",
  "segni",
  "segno",
  "segos",
  "segue",
  "seifs",
  "seine",
  "seise",
  "seism",
  "seiza",
  "seize",
  "selah",
  "selfs",
  "selle",
  "sells",
  "selva",
  "semee",
  "semen",
  "semes",
  "semis",
  "sends",
  "senes",
  "sengi",
  "senna",
  "senor",
  "sensa",
  "sense",
  "sente",
  "senti",
  "sents",
  "sepal",
  "sepia",
  "sepic",
  "sepoy",
  "septa",
  "septs",
  "serac",
  "serai",
  "seral",
  "sered",
  "serer",
  "seres",
  "serfs",
  "serge",
  "serif",
  "serin",
  "serow",
  "serry",
  "serum",
  "serve",
  "servo",
  "setae",
  "setal",
  "seton",
  "setts",
  "setup",
  "seven",
  "sever",
  "sewan",
  "sewar",
  "sewed",
  "sewer",
  "sexed",
  "sexer",
  "sexes",
  "sexto",
  "sexts",
  "shack",
  "shade",
  "shads",
  "shady",
  "shaft",
  "shags",
  "shahs",
  "shake",
  "shako",
  "shaky",
  "shale",
  "shall",
  "shalt",
  "shaly",
  "shame",
  "shams",
  "shank",
  "shape",
  "shard",
  "share",
  "shark",
  "sharn",
  "sharp",
  "shaul",
  "shave",
  "shawl",
  "shawm",
  "shawn",
  "shaws",
  "shays",
  "sheaf",
  "sheal",
  "shear",
  "sheas",
  "sheds",
  "sheen",
  "sheep",
  "sheer",
  "sheet",
  "sheik",
  "shelf",
  "shell",
  "shend",
  "shent",
  "sheol",
  "sherd",
  "shero",
  "shewn",
  "shews",
  "shied",
  "shiel",
  "shier",
  "shies",
  "shift",
  "shill",
  "shily",
  "shims",
  "shine",
  "shins",
  "shiny",
  "ships",
  "shire",
  "shirk",
  "shirr",
  "shirt",
  "shist",
  "shiur",
  "shiva",
  "shive",
  "shivs",
  "shlep",
  "shlub",
  "shmoe",
  "shoal",
  "shoat",
  "shock",
  "shoed",
  "shoer",
  "shoes",
  "shogi",
  "shogs",
  "shoji",
  "shojo",
  "shone",
  "shook",
  "shool",
  "shoon",
  "shoos",
  "shoot",
  "shops",
  "shore",
  "shorl",
  "shorn",
  "short",
  "shote",
  "shots",
  "shott",
  "shout",
  "shove",
  "shown",
  "shows",
  "showy",
  "shoyu",
  "shred",
  "shrew",
  "shris",
  "shrub",
  "shrug",
  "shtik",
  "shtum",
  "shuck",
  "shuln",
  "shuls",
  "shuns",
  "shunt",
  "shura",
  "shush",
  "shute",
  "shuts",
  "shwas",
  "shyer",
  "shyly",
  "sials",
  "sibbs",
  "sibyl",
  "sices",
  "sicko",
  "sicks",
  "sided",
  "sides",
  "sidhe",
  "sidle",
  "siege",
  "sieur",
  "sieve",
  "sifts",
  "sighs",
  "sight",
  "sigil",
  "sigla",
  "sigma",
  "signa",
  "signs",
  "sikas",
  "siker",
  "sikes",
  "silds",
  "silex",
  "silks",
  "silky",
  "sills",
  "silly",
  "silos",
  "silts",
  "silty",
  "silva",
  "simar",
  "simas",
  "simps",
  "since",
  "sines",
  "sinew",
  "singe",
  "sings",
  "sinhs",
  "sinks",
  "sinus",
  "siped",
  "sipes",
  "sired",
  "siree",
  "siren",
  "sires",
  "sirra",
  "sirup",
  "sisal",
  "sises",
  "sissy",
  "sitar",
  "sited",
  "sites",
  "situp",
  "situs",
  "siver",
  "sixer",
  "sixes",
  "sixmo",
  "sixte",
  "sixth",
  "sixty",
  "sizar",
  "sized",
  "sizer",
  "sizes",
  "skags",
  "skald",
  "skank",
  "skate",
  "skats",
  "skean",
  "skeds",
  "skeed",
  "skeen",
  "skees",
  "skeet",
  "skegs",
  "skein",
  "skell",
  "skelm",
  "skelp",
  "skene",
  "skeps",
  "skews",
  "skids",
  "skied",
  "skier",
  "skies",
  "skiey",
  "skiff",
  "skill",
  "skimp",
  "skims",
  "skink",
  "skins",
  "skint",
  "skips",
  "skirl",
  "skirr",
  "skirt",
  "skite",
  "skits",
  "skive",
  "skoal",
  "skols",
  "skort",
  "skosh",
  "skuas",
  "skulk",
  "skull",
  "skunk",
  "skyed",
  "skyey",
  "slabs",
  "slack",
  "slags",
  "slain",
  "slake",
  "slams",
  "slang",
  "slank",
  "slant",
  "slaps",
  "slash",
  "slate",
  "slats",
  "slaty",
  "slave",
  "slaws",
  "slays",
  "sleds",
  "sleek",
  "sleep",
  "sleet",
  "slept",
  "slews",
  "slice",
  "slick",
  "slide",
  "slier",
  "slily",
  "slime",
  "slims",
  "slimy",
  "sling",
  "slink",
  "slipe",
  "slips",
  "slipt",
  "slits",
  "slobs",
  "sloes",
  "slogs",
  "sloid",
  "slojd",
  "slomo",
  "sloop",
  "slope",
  "slops",
  "slosh",
  "sloth",
  "slots",
  "slows",
  "sloyd",
  "slubs",
  "slued",
  "slues",
  "sluff",
  "slugs",
  "slump",
  "slums",
  "slung",
  "slunk",
  "slurb",
  "slurp",
  "slurs",
  "slush",
  "sluts",
  "slyer",
  "slyly",
  "slype",
  "smack",
  "small",
  "smalt",
  "smarm",
  "smart",
  "smash",
  "smaze",
  "smear",
  "smeek",
  "smell",
  "smelt",
  "smerk",
  "smews",
  "smile",
  "smirk",
  "smite",
  "smith",
  "smock",
  "smogs",
  "smoke",
  "smoky",
  "smolt",
  "smorg",
  "smote",
  "smush",
  "smuts",
  "snack",
  "snafu",
  "snags",
  "snail",
  "snake",
  "snaky",
  "snaps",
  "snare",
  "snarf",
  "snark",
  "snarl",
  "snash",
  "snath",
  "snaws",
  "sneak",
  "sneap",
  "sneck",
  "sneds",
  "sneer",
  "snell",
  "snibs",
  "snick",
  "snide",
  "sniff",
  "snipe",
  "snips",
  "snits",
  "snobs",
  "snogs",
  "snood",
  "snook",
  "snool",
  "snoop",
  "snoot",
  "snore",
  "snort",
  "snots",
  "snout",
  "snows",
  "snowy",
  "snubs",
  "snuck",
  "snuff",
  "snugs",
  "snyes",
  "soaks",
  "soaps",
  "soapy",
  "soare",
  "soars",
  "soave",
  "sobas",
  "sober",
  "socas",
  "soces",
  "socko",
  "socks",
  "socle",
  "sodas",
  "soddy",
  "sodic",
  "sodom",
  "sofar",
  "sofas",
  "softa",
  "softs",
  "softy",
  "soggy",
  "soils",
  "sojas",
  "sojus",
  "sokes",
  "sokol",
  "solan",
  "solar",
  "solas",
  "soldi",
  "soldo",
  "soled",
  "solei",
  "soles",
  "solid",
  "solon",
  "solos",
  "solum",
  "solus",
  "solve",
  "soman",
  "somas",
  "sonar",
  "sonde",
  "sones",
  "songs",
  "sonic",
  "sonly",
  "sonny",
  "sonsy",
  "sooey",
  "sooks",
  "sooth",
  "soots",
  "sooty",
  "sophs",
  "sophy",
  "sopor",
  "soppy",
  "soras",
  "sorbs",
  "sords",
  "sored",
  "sorel",
  "sorer",
  "sores",
  "sorgo",
  "sorns",
  "sorry",
  "sorts",
  "sorus",
  "soths",
  "sotol",
  "sough",
  "souks",
  "souls",
  "sound",
  "soups",
  "soupy",
  "sours",
  "souse",
  "south",
  "sowar",
  "sowed",
  "sower",
  "soyas",
  "soyuz",
  "sozin",
  "space",
  "spacy",
  "spade",
  "spado",
  "spaed",
  "spaes",
  "spahi",
  "spail",
  "spait",
  "spake",
  "spale",
  "spall",
  "spams",
  "spang",
  "spank",
  "spans",
  "spare",
  "spark",
  "spars",
  "spasm",
  "spate",
  "spats",
  "spawn",
  "spays",
  "speak",
  "spean",
  "spear",
  "speck",
  "specs",
  "speed",
  "speel",
  "speer",
  "speil",
  "speir",
  "spell",
  "spelt",
  "spend",
  "spent",
  "sperm",
  "spews",
  "spica",
  "spice",
  "spicy",
  "spied",
  "spiel",
  "spier",
  "spies",
  "spiff",
  "spike",
  "spiky",
  "spile",
  "spill",
  "spilt",
  "spine",
  "spins",
  "spiny",
  "spire",
  "spirt",
  "spiry",
  "spite",
  "spits",
  "spitz",
  "spivs",
  "splat",
  "splay",
  "split",
  "spode",
  "spoil",
  "spoke",
  "spoof",
  "spook",
  "spool",
  "spoon",
  "spoor",
  "spore",
  "sport",
  "spots",
  "spout",
  "sprag",
  "sprat",
  "spray",
  "spree",
  "sprig",
  "sprit",
  "sprog",
  "sprue",
  "sprug",
  "spuds",
  "spued",
  "spues",
  "spume",
  "spumy",
  "spunk",
  "spurn",
  "spurs",
  "spurt",
  "sputa",
  "squab",
  "squad",
  "squat",
  "squeg",
  "squib",
  "squid",
  "stabs",
  "stack",
  "stade",
  "staff",
  "stage",
  "stags",
  "stagy",
  "staid",
  "staig",
  "stain",
  "stair",
  "stake",
  "stale",
  "stalk",
  "stall",
  "stamp",
  "stand",
  "stane",
  "stang",
  "stank",
  "staph",
  "stare",
  "stark",
  "stars",
  "start",
  "stash",
  "state",
  "stats",
  "stave",
  "stays",
  "stead",
  "steak",
  "steal",
  "steam",
  "steed",
  "steek",
  "steel",
  "steep",
  "steer",
  "stein",
  "stela",
  "stele",
  "stems",
  "steno",
  "stent",
  "steps",
  "stere",
  "stern",
  "stets",
  "stews",
  "stewy",
  "stich",
  "stick",
  "stied",
  "sties",
  "stiff",
  "stile",
  "still",
  "stilt",
  "stime",
  "stimy",
  "sting",
  "stink",
  "stint",
  "stipe",
  "stirk",
  "stirp",
  "stirs",
  "stoae",
  "stoai",
  "stoas",
  "stoat",
  "stobs",
  "stock",
  "stogy",
  "stoic",
  "stoke",
  "stole",
  "stoma",
  "stomp",
  "stone",
  "stonk",
  "stony",
  "stood",
  "stook",
  "stool",
  "stoop",
  "stope",
  "stops",
  "stopt",
  "store",
  "stork",
  "storm",
  "story",
  "stoss",
  "stots",
  "stott",
  "stoup",
  "stour",
  "stout",
  "stove",
  "stowp",
  "stows",
  "strap",
  "straw",
  "stray",
  "strep",
  "strew",
  "stria",
  "strip",
  "strop",
  "strow",
  "stroy",
  "strum",
  "strut",
  "stubs",
  "stuck",
  "studs",
  "study",
  "stuff",
  "stull",
  "stump",
  "stums",
  "stung",
  "stunk",
  "stuns",
  "stunt",
  "stupa",
  "stupe",
  "sturt",
  "styed",
  "styes",
  "style",
  "styli",
  "stymy",
  "suave",
  "subah",
  "subas",
  "suber",
  "sucks",
  "sucky",
  "sucre",
  "sudds",
  "sudor",
  "sudsy",
  "suede",
  "suers",
  "suete",
  "suets",
  "suety",
  "sugar",
  "sughs",
  "suing",
  "suint",
  "suite",
  "suits",
  "sukhs",
  "sulci",
  "sulfa",
  "sulfo",
  "sulks",
  "sulky",
  "sully",
  "sulus",
  "sumac",
  "sumis",
  "summa",
  "sumos",
  "sumps",
  "sunna",
  "sunns",
  "sunny",
  "sunup",
  "super",
  "supes",
  "supra",
  "surah",
  "sural",
  "suras",
  "surds",
  "surer",
  "surfs",
  "surfy",
  "surge",
  "surgy",
  "surly",
  "surra",
  "sused",
  "suses",
  "sushi",
  "sutra",
  "sutta",
  "swabs",
  "swage",
  "swags",
  "swail",
  "swain",
  "swale",
  "swami",
  "swamp",
  "swamy",
  "swang",
  "swank",
  "swans",
  "swaps",
  "sward",
  "sware",
  "swarf",
  "swarm",
  "swart",
  "swash",
  "swath",
  "swats",
  "sways",
  "swear",
  "sweat",
  "swede",
  "sweep",
  "sweer",
  "sweet",
  "swell",
  "swept",
  "swift",
  "swigs",
  "swile",
  "swill",
  "swims",
  "swine",
  "swing",
  "swink",
  "swipe",
  "swirl",
  "swish",
  "swiss",
  "swith",
  "swive",
  "swobs",
  "swoon",
  "swoop",
  "swops",
  "sword",
  "swore",
  "sworn",
  "swots",
  "swoun",
  "swung",
  "sycee",
  "syces",
  "sycon",
  "sykes",
  "sylis",
  "sylph",
  "sylva",
  "synch",
  "syncs",
  "synod",
  "synth",
  "syphs",
  "syren",
  "syrup",
  "sysop",
  "tabby",
  "taber",
  "tabes",
  "tabid",
  "tabla",
  "table",
  "taboo",
  "tabor",
  "tabun",
  "tabus",
  "tacan",
  "taces",
  "tacet",
  "tache",
  "tachs",
  "tacit",
  "tacks",
  "tacky",
  "tacos",
  "tacts",
  "taels",
  "taffy",
  "tafia",
  "tahrs",
  "taiga",
  "taiko",
  "tails",
  "tains",
  "taint",
  "tajes",
  "takas",
  "taken",
  "taker",
  "takes",
  "takin",
  "talar",
  "talas",
  "talcs",
  "talcy",
  "taler",
  "tales",
  "talks",
  "talky",
  "talls",
  "tally",
  "talon",
  "taluk",
  "talus",
  "tamal",
  "tamed",
  "tamer",
  "tames",
  "tamis",
  "tammy",
  "tamps",
  "tanga",
  "tango",
  "tangs",
  "tangy",
  "tanka",
  "tanks",
  "tansy",
  "tanto",
  "tapas",
  "taped",
  "taper",
  "tapes",
  "tapir",
  "tapis",
  "tardo",
  "tardy",
  "tared",
  "tares",
  "targa",
  "targe",
  "tarns",
  "taroc",
  "tarok",
  "taros",
  "tarot",
  "tarps",
  "tarre",
  "tarry",
  "tarsi",
  "tarts",
  "tarty",
  "tased",
  "tases",
  "tasks",
  "tasse",
  "tasso",
  "taste",
  "tasty",
  "tatar",
  "tater",
  "tates",
  "tatty",
  "taunt",
  "tauon",
  "taupe",
  "tauts",
  "tawed",
  "tawer",
  "tawie",
  "tawny",
  "tawse",
  "taxed",
  "taxer",
  "taxes",
  "taxis",
  "taxol",
  "taxon",
  "taxus",
  "tayra",
  "tazza",
  "tazze",
  "teach",
  "teaks",
  "teals",
  "teams",
  "tears",
  "teary",
  "tease",
  "teats",
  "techs",
  "techy",
  "tecta",
  "teddy",
  "teels",
  "teems",
  "teens",
  "teeny",
  "teeth",
  "teffs",
  "teggs",
  "tegua",
  "tegus",
  "teiid",
  "teind",
  "teins",
  "telae",
  "telco",
  "teles",
  "telex",
  "telia",
  "telic",
  "tells",
  "telly",
  "teloi",
  "telos",
  "tempi",
  "tempo",
  "temps",
  "tempt",
  "tench",
  "tends",
  "tendu",
  "tenet",
  "tenge",
  "tenia",
  "tenne",
  "tenno",
  "tenny",
  "tenon",
  "tenor",
  "tense",
  "tenth",
  "tents",
  "tenty",
  "tepal",
  "tepas",
  "tepee",
  "tepid",
  "tepoy",
  "terai",
  "terce",
  "teres",
  "terga",
  "terms",
  "terne",
  "terns",
  "terra",
  "terry",
  "terse",
  "tesla",
  "testa",
  "tests",
  "testy",
  "teths",
  "tetra",
  "tetri",
  "teuch",
  "teugh",
  "tewed",
  "texas",
  "texts",
  "thack",
  "thali",
  "thane",
  "thank",
  "tharm",
  "thaws",
  "thebe",
  "theca",
  "theft",
  "thegn",
  "thein",
  "their",
  "theme",
  "thens",
  "there",
  "therm",
  "these",
  "thesp",
  "theta",
  "thews",
  "thewy",
  "thick",
  "thief",
  "thigh",
  "thill",
  "thine",
  "thing",
  "think",
  "thins",
  "thiol",
  "third",
  "thirl",
  "thole",
  "thong",
  "thorn",
  "thoro",
  "thorp",
  "those",
  "thous",
  "thraw",
  "three",
  "threw",
  "thrip",
  "throb",
  "throe",
  "throw",
  "thrum",
  "thuds",
  "thugs",
  "thuja",
  "thumb",
  "thump",
  "thunk",
  "thurl",
  "thuya",
  "thyme",
  "thymi",
  "thymy",
  "tians",
  "tiara",
  "tibia",
  "tical",
  "ticks",
  "tidal",
  "tided",
  "tides",
  "tiers",
  "tiffs",
  "tiger",
  "tight",
  "tigon",
  "tikes",
  "tikis",
  "tikka",
  "tilak",
  "tilde",
  "tiled",
  "tiler",
  "tiles",
  "tills",
  "tilth",
  "tilts",
  "timed",
  "timer",
  "times",
  "timid",
  "tinct",
  "tinea",
  "tined",
  "tines",
  "tinge",
  "tings",
  "tinny",
  "tints",
  "tipis",
  "tippy",
  "tipsy",
  "tired",
  "tires",
  "tirls",
  "tiros",
  "titan",
  "titch",
  "titer",
  "tithe",
  "titis",
  "title",
  "titre",
  "titty",
  "tiyin",
  "tiyns",
  "tizes",
  "tizzy",
  "toads",
  "toady",
  "toast",
  "tocks",
  "tocos",
  "today",
  "toddy",
  "toeas",
  "toffs",
  "toffy",
  "tofts",
  "tofus",
  "togae",
  "togas",
  "togue",
  "toile",
  "toils",
  "toits",
  "tokay",
  "toked",
  "token",
  "toker",
  "tokes",
  "tolan",
  "tolar",
  "tolas",
  "toled",
  "toles",
  "tolls",
  "tolts",
  "tolus",
  "tolyl",
  "toman",
  "tombs",
  "tomes",
  "tommy",
  "tonal",
  "tondi",
  "tondo",
  "toned",
  "toner",
  "tones",
  "toney",
  "tonga",
  "tongs",
  "tonic",
  "tonne",
  "tonus",
  "tools",
  "toons",
  "tooth",
  "toots",
  "topaz",
  "toped",
  "topee",
  "toper",
  "topes",
  "tophe",
  "tophi",
  "tophs",
  "topic",
  "topis",
  "topoi",
  "topos",
  "toque",
  "torah",
  "toras",
  "torch",
  "torcs",
  "tores",
  "toric",
  "torii",
  "toros",
  "torot",
  "torrs",
  "torse",
  "torsi",
  "torsk",
  "torso",
  "torta",
  "torte",
  "torts",
  "torus",
  "tosas",
  "total",
  "toted",
  "totem",
  "toter",
  "totes",
  "touch",
  "tough",
  "tours",
  "touse",
  "touts",
  "towed",
  "towel",
  "tower",
  "towie",
  "towns",
  "towny",
  "toxic",
  "toxin",
  "toyed",
  "toyer",
  "toyon",
  "toyos",
  "trace",
  "track",
  "tract",
  "trade",
  "tragi",
  "traik",
  "trail",
  "train",
  "trait",
  "tramp",
  "trams",
  "trank",
  "tranq",
  "trans",
  "traps",
  "trapt",
  "trash",
  "trass",
  "trave",
  "trawl",
  "trayf",
  "trays",
  "tread",
  "treat",
  "treed",
  "treen",
  "trees",
  "trefa",
  "treks",
  "trems",
  "trend",
  "tress",
  "trets",
  "trews",
  "treyf",
  "treys",
  "triac",
  "triad",
  "trial",
  "tribe",
  "trice",
  "trick",
  "tried",
  "trier",
  "tries",
  "trigo",
  "trigs",
  "trike",
  "trill",
  "trims",
  "trine",
  "triol",
  "trios",
  "tripe",
  "trips",
  "trite",
  "troak",
  "trock",
  "trode",
  "trogs",
  "trois",
  "troke",
  "troll",
  "tromp",
  "trona",
  "trone",
  "troop",
  "trooz",
  "trope",
  "troth",
  "trots",
  "trout",
  "trove",
  "trows",
  "troys",
  "truce",
  "truck",
  "trugs",
  "trull",
  "truly",
  "trump",
  "trunk",
  "truss",
  "trust",
  "truth",
  "tryma",
  "tryst",
  "tsade",
  "tsadi",
  "tsars",
  "tsked",
  "tsuba",
  "tsubo",
  "tubae",
  "tubal",
  "tubas",
  "tubby",
  "tubed",
  "tuber",
  "tubes",
  "tucks",
  "tufas",
  "tuffs",
  "tufts",
  "tufty",
  "tuile",
  "tules",
  "tulip",
  "tulle",
  "tulsi",
  "tumid",
  "tummy",
  "tumor",
  "tumps",
  "tunas",
  "tuned",
  "tuner",
  "tunes",
  "tungs",
  "tunic",
  "tunny",
  "tupik",
  "tuque",
  "turbo",
  "turfs",
  "turfy",
  "turks",
  "turns",
  "turps",
  "turrs",
  "tushy",
  "tusks",
  "tusky",
  "tutee",
  "tutor",
  "tutti",
  "tutty",
  "tutus",
  "tuxes",
  "tuyer",
  "twaes",
  "twain",
  "twang",
  "tweak",
  "tweed",
  "tween",
  "tweep",
  "tweer",
  "tweet",
  "twerk",
  "twerp",
  "twice",
  "twier",
  "twigs",
  "twill",
  "twine",
  "twink",
  "twins",
  "twiny",
  "twirl",
  "twirp",
  "twist",
  "twits",
  "twixt",
  "twyer",
  "tyees",
  "tyers",
  "tying",
  "tyiyn",
  "tykes",
  "tyned",
  "tynes",
  "typal",
  "typed",
  "types",
  "typey",
  "typic",
  "typos",
  "typps",
  "tyred",
  "tyres",
  "tyros",
  "tythe",
  "tzars",
  "udder",
  "udons",
  "uhlan",
  "ukase",
  "ulama",
  "ulans",
  "ulcer",
  "ulema",
  "ulnad",
  "ulnae",
  "ulnar",
  "ulnas",
  "ulpan",
  "ultra",
  "ulvas",
  "umami",
  "umbel",
  "umber",
  "umbos",
  "umbra",
  "umiac",
  "umiak",
  "umiaq",
  "ummah",
  "ummas",
  "ummed",
  "umped",
  "umphs",
  "umpty",
  "unais",
  "unapt",
  "unarm",
  "unary",
  "unaus",
  "unban",
  "unbar",
  "unbid",
  "unbox",
  "uncap",
  "uncia",
  "uncle",
  "uncos",
  "uncoy",
  "uncus",
  "uncut",
  "undee",
  "under",
  "undid",
  "undos",
  "undue",
  "unfed",
  "unfit",
  "unfix",
  "ungot",
  "unhat",
  "unhip",
  "unica",
  "unify",
  "union",
  "unite",
  "units",
  "unity",
  "unjam",
  "unlay",
  "unled",
  "unlet",
  "unlit",
  "unman",
  "unmet",
  "unmew",
  "unmix",
  "unpeg",
  "unpen",
  "unpin",
  "unrig",
  "unrip",
  "unsaw",
  "unsay",
  "unsee",
  "unset",
  "unsew",
  "unsex",
  "untie",
  "until",
  "unwed",
  "unwet",
  "unwit",
  "unwon",
  "unzip",
  "upbow",
  "upbye",
  "updos",
  "updry",
  "upend",
  "uplit",
  "upped",
  "upper",
  "upset",
  "uraei",
  "urare",
  "urari",
  "urase",
  "urate",
  "urban",
  "urbia",
  "ureal",
  "ureas",
  "uredo",
  "ureic",
  "urged",
  "urger",
  "urges",
  "urial",
  "urine",
  "urped",
  "ursae",
  "ursid",
  "usage",
  "users",
  "usher",
  "using",
  "usnea",
  "usque",
  "usual",
  "usurp",
  "usury",
  "uteri",
  "utile",
  "utter",
  "uveal",
  "uveas",
  "uvula",
  "vacua",
  "vagal",
  "vague",
  "vagus",
  "vails",
  "vairs",
  "vakil",
  "vales",
  "valet",
  "valid",
  "valor",
  "valse",
  "value",
  "valve",
  "vamps",
  "vampy",
  "vanda",
  "vaned",
  "vanes",
  "vangs",
  "vaped",
  "vaper",
  "vapes",
  "vapid",
  "vapor",
  "varas",
  "varec",
  "varia",
  "varix",
  "varna",
  "varus",
  "varve",
  "vasal",
  "vases",
  "vasts",
  "vasty",
  "vatic",
  "vatus",
  "vault",
  "vaunt",
  "veals",
  "vealy",
  "veena",
  "veeps",
  "veers",
  "veery",
  "vegan",
  "vegas",
  "veges",
  "vegie",
  "veils",
  "veins",
  "veiny",
  "velar",
  "velds",
  "veldt",
  "velum",
  "venae",
  "venal",
  "vends",
  "venge",
  "venin",
  "venom",
  "vents",
  "venue",
  "verbs",
  "verge",
  "verse",
  "verso",
  "verst",
  "verts",
  "vertu",
  "verve",
  "vesta",
  "vests",
  "vetch",
  "vexed",
  "vexer",
  "vexes",
  "vexil",
  "vials",
  "viand",
  "vibes",
  "vicar",
  "viced",
  "vices",
  "vichy",
  "video",
  "viers",
  "views",
  "viewy",
  "viffs",
  "vigas",
  "vigia",
  "vigil",
  "vigor",
  "viler",
  "villa",
  "villi",
  "vills",
  "vimen",
  "vinal",
  "vinas",
  "vinca",
  "vined",
  "vines",
  "vinic",
  "vinos",
  "vinyl",
  "viola",
  "viols",
  "viper",
  "viral",
  "vireo",
  "vires",
  "virga",
  "virid",
  "virls",
  "virtu",
  "virus",
  "visas",
  "vised",
  "vises",
  "visit",
  "visor",
  "vista",
  "vitae",
  "vital",
  "vitta",
  "vivas",
  "vivat",
  "vivid",
  "vixen",
  "vizir",
  "vizor",
  "vleis",
  "vlogs",
  "vocab",
  "vocal",
  "voces",
  "vodka",
  "vodou",
  "vodun",
  "vogie",
  "vogue",
  "voice",
  "voids",
  "voila",
  "voile",
  "volar",
  "voled",
  "voles",
  "volks",
  "volta",
  "volte",
  "volti",
  "volts",
  "volva",
  "vomer",
  "vomit",
  "voted",
  "voter",
  "votes",
  "vouch",
  "vowed",
  "vowel",
  "vower",
  "voxel",
  "vroom",
  "vrouw",
  "vrows",
  "vuggs",
  "vuggy",
  "vughs",
  "vulgo",
  "vulns",
  "vulva",
  "vying",
  "wacke",
  "wacko",
  "wacks",
  "wacky",
  "waddy",
  "waded",
  "wader",
  "wades",
  "wadis",
  "wafer",
  "waffs",
  "wafts",
  "waged",
  "wager",
  "wages",
  "wagon",
  "wahoo",
  "waifs",
  "wails",
  "wains",
  "wairs",
  "waist",
  "waits",
  "waive",
  "waked",
  "waken",
  "waker",
  "wakes",
  "waled",
  "waler",
  "wales",
  "walie",
  "walis",
  "walks",
  "walla",
  "walls",
  "wally",
  "waltz",
  "wames",
  "wamus",
  "wands",
  "waned",
  "wanes",
  "waney",
  "wanly",
  "wants",
  "wards",
  "wared",
  "wares",
  "warez",
  "warks",
  "warms",
  "warns",
  "warps",
  "warts",
  "warty",
  "washy",
  "wasps",
  "waspy",
  "waste",
  "wasts",
  "watap",
  "watch",
  "water",
  "watts",
  "waugh",
  "wauks",
  "wauls",
  "waved",
  "waver",
  "waves",
  "wavey",
  "wawls",
  "waxed",
  "waxen",
  "waxer",
  "waxes",
  "weald",
  "weals",
  "weans",
  "wears",
  "weary",
  "weave",
  "webby",
  "weber",
  "wecht",
  "wedel",
  "wedge",
  "wedgy",
  "weeds",
  "weedy",
  "weeks",
  "weens",
  "weeny",
  "weeps",
  "weepy",
  "weest",
  "weets",
  "wefts",
  "weigh",
  "weird",
  "weirs",
  "wekas",
  "welch",
  "welds",
  "wells",
  "welly",
  "welsh",
  "welts",
  "wench",
  "wends",
  "wenny",
  "wests",
  "wetas",
  "wetly",
  "whack",
  "whale",
  "whamo",
  "whams",
  "whang",
  "whaps",
  "wharf",
  "whats",
  "whaup",
  "wheal",
  "wheat",
  "wheel",
  "wheen",
  "wheep",
  "whelk",
  "whelm",
  "whelp",
  "whens",
  "where",
  "whets",
  "whews",
  "wheys",
  "which",
  "whids",
  "whiff",
  "whigs",
  "while",
  "whims",
  "whine",
  "whins",
  "whiny",
  "whips",
  "whipt",
  "whirl",
  "whirr",
  "whirs",
  "whish",
  "whisk",
  "whist",
  "white",
  "whits",
  "whity",
  "whizz",
  "whole",
  "whomp",
  "whoof",
  "whoop",
  "whops",
  "whore",
  "whorl",
  "whort",
  "whose",
  "whoso",
  "whump",
  "whups",
  "whyda",
  "wicca",
  "wicks",
  "widdy",
  "widen",
  "wider",
  "wides",
  "widow",
  "width",
  "wield",
  "wifed",
  "wifes",
  "wifey",
  "wifty",
  "wigan",
  "wiggy",
  "wight",
  "wikis",
  "wilco",
  "wilds",
  "wiled",
  "wiles",
  "wills",
  "willy",
  "wilts",
  "wimps",
  "wimpy",
  "wince",
  "winch",
  "winds",
  "windy",
  "wined",
  "wines",
  "winey",
  "wings",
  "wingy",
  "winks",
  "winos",
  "winze",
  "wiped",
  "wiper",
  "wipes",
  "wired",
  "wirer",
  "wires",
  "wirra",
  "wised",
  "wiser",
  "wises",
  "wisha",
  "wisps",
  "wispy",
  "wists",
  "witan",
  "witch",
  "wited",
  "wites",
  "withe",
  "withy",
  "witty",
  "wived",
  "wiver",
  "wives",
  "wizen",
  "wizes",
  "woads",
  "woald",
  "wodge",
  "woful",
  "woken",
  "woker",
  "wolds",
  "wolfs",
  "woman",
  "wombs",
  "womby",
  "women",
  "womyn",
  "wonks",
  "wonky",
  "wonts",
  "woods",
  "woody",
  "wooed",
  "wooer",
  "woofs",
  "wools",
  "wooly",
  "woops",
  "woopy",
  "woosh",
  "woozy",
  "words",
  "wordy",
  "works",
  "world",
  "worms",
  "wormy",
  "worry",
  "worse",
  "worst",
  "worth",
  "worts",
  "would",
  "wound",
  "woven",
  "wowed",
  "wowee",
  "wrack",
  "wrang",
  "wraps",
  "wrapt",
  "wrath",
  "wreak",
  "wreck",
  "wrens",
  "wrest",
  "wrick",
  "wried",
  "wrier",
  "wries",
  "wring",
  "wrist",
  "write",
  "writs",
  "wrong",
  "wrote",
  "wroth",
  "wrung",
  "wryer",
  "wryly",
  "wuddy",
  "wurst",
  "wushu",
  "wussy",
  "wyled",
  "wyles",
  "wynds",
  "wynns",
  "wyted",
  "wytes",
  "xebec",
  "xenia",
  "xenic",
  "xenon",
  "xeric",
  "xerox",
  "xerus",
  "xylan",
  "xylem",
  "xylol",
  "xylyl",
  "xysti",
  "xysts",
  "yabby",
  "yacht",
  "yacks",
  "yaffs",
  "yager",
  "yages",
  "yagis",
  "yahoo",
  "yaird",
  "yamen",
  "yamun",
  "yangs",
  "yanks",
  "yapok",
  "yapon",
  "yappy",
  "yarak",
  "yards",
  "yarer",
  "yarns",
  "yauds",
  "yauld",
  "yaups",
  "yawed",
  "yawey",
  "yawls",
  "yawns",
  "yawps",
  "yclad",
  "yeahs",
  "yeans",
  "yearn",
  "years",
  "yeast",
  "yecch",
  "yechs",
  "yechy",
  "yeesh",
  "yeggs",
  "yelks",
  "yells",
  "yelps",
  "yenta",
  "yente",
  "yerba",
  "yerks",
  "yeses",
  "yetis",
  "yetts",
  "yeuks",
  "yeuky",
  "yield",
  "yikes",
  "yills",
  "yince",
  "yipes",
  "yirds",
  "yirrs",
  "yirth",
  "ylems",
  "yobbo",
  "yobby",
  "yocks",
  "yodel",
  "yodhs",
  "yodle",
  "yogas",
  "yogee",
  "yoghs",
  "yogic",
  "yogin",
  "yogis",
  "yoked",
  "yokel",
  "yokes",
  "yolks",
  "yolky",
  "yomim",
  "yomps",
  "yonic",
  "yonis",
  "yonks",
  "yoofs",
  "yores",
  "young",
  "yourn",
  "yours",
  "youse",
  "youth",
  "yowed",
  "yowes",
  "yowie",
  "yowls",
  "yowza",
  "yuans",
  "yucas",
  "yucca",
  "yucch",
  "yucks",
  "yucky",
  "yugas",
  "yuked",
  "yukes",
  "yukky",
  "yulan",
  "yules",
  "yummy",
  "yupon",
  "yuppy",
  "yurta",
  "yurts",
  "yuzus",
  "zaida",
  "zaidy",
  "zaire",
  "zakat",
  "zamia",
  "zanza",
  "zappy",
  "zarfs",
  "zaxes",
  "zayin",
  "zazen",
  "zeals",
  "zebec",
  "zebra",
  "zebus",
  "zedas",
  "zeins",
  "zendo",
  "zerks",
  "zeros",
  "zests",
  "zesty",
  "zetas",
  "zibet",
  "zilch",
  "zills",
  "zinco",
  "zincs",
  "zincy",
  "zineb",
  "zines",
  "zings",
  "zingy",
  "zinky",
  "zippo",
  "zippy",
  "ziram",
  "zitis",
  "zizit",
  "zlote",
  "zloty",
  "zoeae",
  "zoeal",
  "zoeas",
  "zombi",
  "zonae",
  "zonal",
  "zoned",
  "zoner",
  "zones",
  "zonks",
  "zooey",
  "zooid",
  "zooks",
  "zooms",
  "zoons",
  "zooty",
  "zoril",
  "zoris",
  "zouks",
  "zowee",
  "zowie",
  "zuppa",
  "zuzim",
  "zymes"
];
var words_default = words;

// route-module:/Users/chidiebube/Projects/wordle/app/routes/play.tsx
var loader5 = async ({ request }) => {
  let random = Math.floor(Math.random() * 9337);
  let randomWord = words_default[random].toUpperCase();
  console.log(randomWord);
  return {
    allWords: words_default,
    wordToGuess: randomWord,
    initialResponse: Array.from({ length: 6 }, (e) => Array.from({ length: 5 }, () => ({ letter: "", className: "text-white bg-blue" })))
  };
};
var action3 = async ({ request }) => {
  const userId = await getUserId(request);
  let data = await request.formData();
  let status = data.get("status");
  let score = data.get("score");
  let redirectTo = "";
  if (status === "win" && score) {
    if (userId) {
      let updatedScore = await updateScore(userId, +score);
      if (!updatedScore) {
        return;
      }
    }
    redirectTo = `/play/win?score=${score}`;
  }
  if (status === "lose") {
    redirectTo = "/play/lose";
  }
  return (0, import_remix9.redirect)(redirectTo);
};
var Play = () => {
  const { allWords, wordToGuess, initialResponse } = (0, import_remix9.useLoaderData)();
  const submit = (0, import_remix9.useSubmit)();
  const [currentRow, setCurrentRow] = (0, import_react3.useState)(0);
  const [responses, setResponses] = (0, import_react3.useState)(initialResponse);
  const [wrongGuess, setWrongGuess] = (0, import_react3.useState)(false);
  const [keyStyle, setKeyStyle] = (0, import_react3.useState)({});
  const currentRowRef = (0, import_react3.useRef)(currentRow);
  const getCurrentWord = () => {
    return responses[currentRowRef.current].map((elem) => elem.letter).join("");
  };
  const handleEntry = (letter) => {
    let entry2 = validateEntry(letter);
    if (!entry2) {
      return;
    }
    let responseTuple = [...responses];
    let rowWord = getCurrentWord();
    if (entry2 === "ENTER") {
      validateRow();
      return;
    }
    if (entry2 === "BACKSPACE") {
      setWrongGuess(false);
      removeLetter();
      return;
    }
    let fullRow = isFullRow(rowWord, 5);
    if (fullRow)
      return;
    responseTuple[currentRowRef.current][rowWord.length].letter = entry2;
    setResponses(responseTuple);
  };
  const removeLetter = () => {
    let word = getCurrentWord();
    if (!word.length)
      return;
    let responseTuple = [...responses];
    responseTuple[currentRowRef.current][word.length - 1].letter = "";
    setResponses(responseTuple);
  };
  const validateRow = () => {
    let word = getCurrentWord();
    let fullRow = isFullRow(word, 5);
    if (!fullRow) {
      toastHandler("You must enter a 5 letter word", 1500);
      return;
    }
    saveResponse();
  };
  const endGame = async (status) => {
    setCurrentRow(0);
    setResponses(Array.from({ length: 6 }, (e) => Array.from({ length: 5 }, () => ({ letter: "", className: "text-white bg-blue" }))));
    setKeyStyle({});
    if (status === "win") {
      submit({ status, score: String(6 - currentRow) }, { method: "post" });
    } else {
      submit({ status }, { method: "post" });
      toastHandler(`WORD: ${wordToGuess}`, 4e3);
    }
  };
  const markKeys = (obj) => {
    setKeyStyle(__spreadValues(__spreadValues({}, keyStyle), obj));
  };
  const checkDictionary = (word) => {
    if (!allWords.includes(word.toLowerCase())) {
      toastHandler("Word not in dictionary!", 2e3);
      setWrongGuess(true);
      return false;
    }
    return true;
  };
  const saveResponse = () => {
    let responseTuple = [...responses];
    let currentWord = getCurrentWord();
    let wordToGuessArray = wordToGuess.split("");
    const keys = {};
    if (!checkDictionary(currentWord))
      return false;
    for (let i = 0; i < wordToGuess.length; i++) {
      let word = responseTuple[currentRowRef.current];
      if (word[i].letter === wordToGuess[i]) {
        keys[word[i].letter] = "text-white bg-green-800";
        word[i].className = "text-white bg-green-800";
        wordToGuessArray.splice(i, 1);
      } else if (wordToGuessArray.includes(word[i].letter) && word[i].letter !== wordToGuessArray[i]) {
        keys[word[i].letter] = "text-white bg-yellow-600";
        word[i].className = "text-white bg-yellow-600";
        wordToGuessArray.splice(wordToGuess.indexOf(word[i].letter), 1, "");
      } else {
        word[i].className = "text-white bg-gray-600";
        keys[word[i].letter] = "text-white bg-gray-900";
      }
    }
    markKeys(keys);
    setResponses(responseTuple);
    currentRowRef.current = currentRowRef.current + 1;
    setCurrentRow((c) => c + 1);
    let gameStatus = currentWord === wordToGuess ? "win" : currentRowRef.current === 6 ? "lose" : null;
    if (gameStatus) {
      endGame(gameStatus);
    }
  };
  (0, import_react3.useEffect)(() => {
    document.addEventListener("keydown", (e) => handleEntry(e.key));
    return () => {
      document.removeEventListener("keydown", (e) => handleEntry(e.key));
    };
  }, []);
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("div", {
    className: "bg-blackbg h-screen w-screen"
  }, /* @__PURE__ */ React.createElement("div", {
    className: "h-2/3 w-full flex items-center justify-center"
  }, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("div", {
    className: `grid gap-3 grid-cols-5 grid-rows-5 p-3 ${wrongGuess ? "animate-shake" : null}`
  }, responses.map((response) => {
    return response.map((letter, i) => {
      return /* @__PURE__ */ React.createElement("div", {
        key: i,
        className: `border-gray-300 border-2 rounded-sm p-4 font-bold text-3xl w-14 h-12 short:h-10 flex items-center justify-center ${letter.className}`
      }, letter.letter);
    });
  })))), /* @__PURE__ */ React.createElement("div", {
    className: " w-full absolute bottom-8"
  }, /* @__PURE__ */ React.createElement(Keyboard_default, {
    handleEntry,
    keyStyle
  })), /* @__PURE__ */ React.createElement(import_remix9.Outlet, null)));
};
function ErrorBoundary2() {
  return /* @__PURE__ */ React.createElement("div", {
    className: "w-screen h-screen bg-blackbg flex items-center justify-center"
  }, /* @__PURE__ */ React.createElement("div", {
    className: "text-center"
  }, /* @__PURE__ */ React.createElement("p", {
    className: "text-white font-bold text-4xl"
  }, "An error ?! I knew software engineering was not my thing! "), /* @__PURE__ */ React.createElement(import_remix9.Link, {
    className: "text-blue-600 text-2xl underline mt-4 block",
    to: "/play"
  }, "Go Back")));
}
var play_default = Play;

// route-module:/Users/chidiebube/Projects/wordle/app/routes/play/lose.tsx
var lose_exports = {};
__export(lose_exports, {
  default: () => lose_default
});
init_react();

// app/components/Modal.tsx
init_react();
var import_react4 = __toModule(require("react"));
var import_remix10 = __toModule(require_remix());
var Modal = ({ icon, title, message, iconStyle }) => {
  const restartLinkRef = (0, import_react4.useRef)(null);
  (0, import_react4.useEffect)(() => {
    var _a;
    (_a = restartLinkRef.current) == null ? void 0 : _a.focus();
  }, []);
  return /* @__PURE__ */ React.createElement("div", {
    className: "w-screen h-screen bg-black bg-opacity-80 fixed z-20 top-0 left-0 flex items-center justify-center"
  }, /* @__PURE__ */ React.createElement("div", {
    className: "w-11/12 lg:w-1/3 min-h-1/3 bg-white rounded-xl  px-5 py-5 flex items-center relative justify-center text-black"
  }, /* @__PURE__ */ React.createElement("div", {
    className: "text-center"
  }, /* @__PURE__ */ React.createElement("i", {
    className: iconStyle
  }, icon), /* @__PURE__ */ React.createElement("p", {
    className: "text-4xl font-bold m-0 p-0"
  }, title), /* @__PURE__ */ React.createElement("p", {
    className: "text-xl my-4 "
  }, message), /* @__PURE__ */ React.createElement("div", {
    className: "flex items-center justify-around mt-8"
  }, /* @__PURE__ */ React.createElement(import_remix10.Link, {
    ref: restartLinkRef,
    to: "/play",
    reloadDocument: true,
    className: "text-blue-600 hover:underline text-lg"
  }, "Restart Game"), /* @__PURE__ */ React.createElement(import_remix10.Link, {
    to: "/leaderboard",
    reloadDocument: true,
    className: "text-blue-600 hover:underline text-lg"
  }, "View Leaderboard")))));
};
var Modal_default = Modal;

// route-module:/Users/chidiebube/Projects/wordle/app/routes/play/lose.tsx
var Lose = () => {
  return /* @__PURE__ */ React.createElement(Modal_default, {
    icon: "\u2717",
    title: "SORRY!!",
    message: "You lost this round! would you retry?",
    iconStyle: "text-red-600 text-8xl m-0 p-0"
  });
};
var lose_default = Lose;

// route-module:/Users/chidiebube/Projects/wordle/app/routes/play/win.tsx
var win_exports = {};
__export(win_exports, {
  default: () => win_default,
  loader: () => loader6
});
init_react();
var import_remix11 = __toModule(require_remix());
var loader6 = async ({ request }) => {
  const url = new URL(request.url);
  let score = url.searchParams.get("score");
  return score;
};
var Win = () => {
  const score = (0, import_remix11.useLoaderData)();
  return /* @__PURE__ */ React.createElement(Modal_default, {
    icon: "\u2713",
    title: "YIPEE!!",
    message: `Congratulations! You have WON this round ${score && `and gained ${score} points`}!`,
    iconStyle: "text-green-600 text-8xl m-0 p-0"
  });
};
var win_default = Win;

// <stdin>
var import_assets = __toModule(require("./assets.json"));
var entry = { module: entry_server_exports };
var routes = {
  "root": {
    id: "root",
    parentId: void 0,
    path: "",
    index: void 0,
    caseSensitive: void 0,
    module: root_exports
  },
  "routes/leaderboard": {
    id: "routes/leaderboard",
    parentId: "root",
    path: "leaderboard",
    index: void 0,
    caseSensitive: void 0,
    module: leaderboard_exports
  },
  "routes/register": {
    id: "routes/register",
    parentId: "root",
    path: "register",
    index: void 0,
    caseSensitive: void 0,
    module: register_exports
  },
  "routes/logout": {
    id: "routes/logout",
    parentId: "root",
    path: "logout",
    index: void 0,
    caseSensitive: void 0,
    module: logout_exports
  },
  "routes/versus": {
    id: "routes/versus",
    parentId: "root",
    path: "versus",
    index: void 0,
    caseSensitive: void 0,
    module: versus_exports
  },
  "routes/index": {
    id: "routes/index",
    parentId: "root",
    path: void 0,
    index: true,
    caseSensitive: void 0,
    module: routes_exports
  },
  "routes/login": {
    id: "routes/login",
    parentId: "root",
    path: "login",
    index: void 0,
    caseSensitive: void 0,
    module: login_exports
  },
  "routes/play": {
    id: "routes/play",
    parentId: "root",
    path: "play",
    index: void 0,
    caseSensitive: void 0,
    module: play_exports
  },
  "routes/play/lose": {
    id: "routes/play/lose",
    parentId: "routes/play",
    path: "lose",
    index: void 0,
    caseSensitive: void 0,
    module: lose_exports
  },
  "routes/play/win": {
    id: "routes/play/win",
    parentId: "routes/play",
    path: "win",
    index: void 0,
    caseSensitive: void 0,
    module: win_exports
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  assets,
  entry,
  routes
});
/**
 * @remix-run/node v1.1.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/**
 * @remix-run/react v1.1.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/**
 * @remix-run/server-runtime v1.1.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/**
 * remix v1.1.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
//# sourceMappingURL=data:application/json;base64,
